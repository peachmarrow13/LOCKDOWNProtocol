#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Analysis_PC

#include "Basic.hpp"

#include "Analysis_PC_classes.hpp"
#include "Analysis_PC_parameters.hpp"


namespace SDK
{

// Function Analysis_PC.Analysis_PC_C.All Set State
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AnalysisPC_State                      State_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::All_Set_State(E_AnalysisPC_State State_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "All Set State");

	Params::Analysis_PC_C_All_Set_State Parms{};

	Parms.State_0 = State_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.BndEvt__Analysis_PC_Button_K2Node_ComponentBoundEvent_0_Button Push__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AMec_C*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::BndEvt__Analysis_PC_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature(class AMec_C* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "BndEvt__Analysis_PC_Button_K2Node_ComponentBoundEvent_0_Button Push__DelegateSignature");

	Params::Analysis_PC_C_BndEvt__Analysis_PC_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature Parms{};

	Parms.Source = Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.Check Ingredients
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Finish                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::Check_Ingredients(bool* Finish, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Check Ingredients");

	Params::Analysis_PC_C_Check_Ingredients Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Finish != nullptr)
		*Finish = Parms.Finish;

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function Analysis_PC.Analysis_PC_C.Check Result
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FStr_ItemState&            Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::Check_Result(const struct FStr_ItemState& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Check Result");

	Params::Analysis_PC_C_Check_Result Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.Clear
// (BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.Create List
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FStr_ItemState>&    Results                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const TArray<bool>&                     List                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AAnalysis_PC_C::Create_List(const TArray<struct FStr_ItemState>& Results, const TArray<bool>& List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Create List");

	Params::Analysis_PC_C_Create_List Parms{};

	Parms.Results = std::move(Results);
	Parms.List = std::move(List);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.ExecuteUbergraph_Analysis_PC
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::ExecuteUbergraph_Analysis_PC(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "ExecuteUbergraph_Analysis_PC");

	Params::Analysis_PC_C_ExecuteUbergraph_Analysis_PC Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.Generate Item State
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    NoDebuff                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStr_ItemState                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FStr_ItemState AAnalysis_PC_C::Generate_Item_State(bool NoDebuff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Generate Item State");

	Params::Analysis_PC_C_Generate_Item_State Parms{};

	Parms.NoDebuff = NoDebuff;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Analysis_PC.Analysis_PC_C.Generate List
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   List_Size_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::Generate_List(int32 List_Size_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Generate List");

	Params::Analysis_PC_C_Generate_List Parms{};

	Parms.List_Size_0 = List_Size_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.Get Key
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          Key                                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::Get_Key(class AActor** Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Get Key");

	Params::Analysis_PC_C_Get_Key Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Key != nullptr)
		*Key = Parms.Key;
}


// Function Analysis_PC.Analysis_PC_C.Get Name
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMec_C*                           Mec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString*                          Name_0                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AAnalysis_PC_C::Get_Name(class AMec_C* Mec, class FString* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Get Name");

	Params::Analysis_PC_C_Get_Name Parms{};

	Parms.Mec = Mec;

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function Analysis_PC.Analysis_PC_C.Local Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::Local_Interaction(int32 Param_Index_0, class AActor* Source, const struct FStr_ItemState& Item_State_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Local Interaction");

	Params::Analysis_PC_C_Local_Interaction Parms{};

	Parms.Param_Index_0 = Param_Index_0;
	Parms.Source = Source;
	Parms.Item_State_0 = std::move(Item_State_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.Net Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::Net_Interaction(int32 Param_Index_0, class AActor* Source, const struct FStr_ItemState& Item_State_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Net Interaction");

	Params::Analysis_PC_C_Net_Interaction Parms{};

	Parms.Param_Index_0 = Param_Index_0;
	Parms.Source = Source;
	Parms.Item_State_0 = std::move(Item_State_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.Next Step
// (BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::Next_Step()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Next Step");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.OnRep_HardDrive
// (BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::OnRep_HardDrive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "OnRep_HardDrive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.OnRep_HDD Step
// (BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::OnRep_HDD_Step()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "OnRep_HDD Step");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.OnRep_Process
// (BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::OnRep_Process()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "OnRep_Process");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.OnRep_Result List
// (BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::OnRep_Result_List()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "OnRep_Result List");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.OnRep_State
// (BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "OnRep_State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.Other Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::Other_Interaction(int32 Param_Index_0, class AActor* Source, const struct FStr_ItemState& Item_State_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Other Interaction");

	Params::Analysis_PC_C_Other_Interaction Parms{};

	Parms.Param_Index_0 = Param_Index_0;
	Parms.Source = Source;
	Parms.Item_State_0 = std::move(Item_State_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.Pause Process
// (BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::Pause_Process()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Pause Process");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.Process Tick
// (BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::Process_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Process Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AAnalysis_PC_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.Set Screen Info
// (Public, BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::Set_Screen_Info()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Set Screen Info");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.Set State
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AnalysisPC_State                      State_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::Set_State(E_AnalysisPC_State State_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Set State");

	Params::Analysis_PC_C_Set_State Parms{};

	Parms.State_0 = State_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.Start Process
// (BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::Start_Process()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Start Process");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.Start Task
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   List_Size_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnalysis_PC_C::Start_Task(int32 List_Size_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Start Task");

	Params::Analysis_PC_C_Start_Task Parms{};

	Parms.List_Size_0 = List_Size_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.State is Valid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FStr_ItemState&            Str_ItemState                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AAnalysis_PC_C::State_is_Valid(const struct FStr_ItemState& Str_ItemState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "State is Valid");

	Params::Analysis_PC_C_State_is_Valid Parms{};

	Parms.Str_ItemState = std::move(Str_ItemState);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Analysis_PC.Analysis_PC_C.Update Clear
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::Update_Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Update Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Analysis_PC.Analysis_PC_C.Update List
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<bool>&                     List                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AAnalysis_PC_C::Update_List(const TArray<bool>& List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "Update List");

	Params::Analysis_PC_C_Update_List Parms{};

	Parms.List = std::move(List);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Analysis_PC.Analysis_PC_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AAnalysis_PC_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Analysis_PC_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

