#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BatteryCharger

#include "Basic.hpp"

#include "BatteryCharger_classes.hpp"
#include "BatteryCharger_parameters.hpp"


namespace SDK
{

// Function BatteryCharger.BatteryCharger_C.BndEvt__Analyzer_Sample_K2Node_ComponentBoundEvent_1_Place Item__DelegateSignature
// (BlueprintEvent)

void ABatteryCharger_C::BndEvt__Analyzer_Sample_K2Node_ComponentBoundEvent_1_Place_Item__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "BndEvt__Analyzer_Sample_K2Node_ComponentBoundEvent_1_Place Item__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BatteryCharger.BatteryCharger_C.BndEvt__Analyzer_Sample_K2Node_ComponentBoundEvent_2_Take Item__DelegateSignature
// (BlueprintEvent)

void ABatteryCharger_C::BndEvt__Analyzer_Sample_K2Node_ComponentBoundEvent_2_Take_Item__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "BndEvt__Analyzer_Sample_K2Node_ComponentBoundEvent_2_Take Item__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BatteryCharger.BatteryCharger_C.Clear
// (BlueprintCallable, BlueprintEvent)

void ABatteryCharger_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BatteryCharger.BatteryCharger_C.ExecuteUbergraph_BatteryCharger
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABatteryCharger_C::ExecuteUbergraph_BatteryCharger(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "ExecuteUbergraph_BatteryCharger");

	Params::BatteryCharger_C_ExecuteUbergraph_BatteryCharger Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BatteryCharger.BatteryCharger_C.Get Key
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          Key                                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABatteryCharger_C::Get_Key(class AActor** Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "Get Key");

	Params::BatteryCharger_C_Get_Key Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Key != nullptr)
		*Key = Parms.Key;
}


// Function BatteryCharger.BatteryCharger_C.Get Name
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMec_C*                           Mec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString*                          Name_0                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABatteryCharger_C::Get_Name(class AMec_C* Mec, class FString* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "Get Name");

	Params::BatteryCharger_C_Get_Name Parms{};

	Parms.Mec = Mec;

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function BatteryCharger.BatteryCharger_C.Local Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABatteryCharger_C::Local_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "Local Interaction");

	Params::BatteryCharger_C_Local_Interaction Parms{};

	Parms.Index_0 = Index_0;
	Parms.Source = Source;
	Parms.Item_State = std::move(Item_State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BatteryCharger.BatteryCharger_C.Net Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABatteryCharger_C::Net_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "Net Interaction");

	Params::BatteryCharger_C_Net_Interaction Parms{};

	Parms.Index_0 = Index_0;
	Parms.Source = Source;
	Parms.Item_State = std::move(Item_State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BatteryCharger.BatteryCharger_C.OnRep_Process
// (BlueprintCallable, BlueprintEvent)

void ABatteryCharger_C::OnRep_Process()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "OnRep_Process");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BatteryCharger.BatteryCharger_C.OnRep_State
// (BlueprintCallable, BlueprintEvent)

void ABatteryCharger_C::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "OnRep_State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BatteryCharger.BatteryCharger_C.Other Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABatteryCharger_C::Other_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "Other Interaction");

	Params::BatteryCharger_C_Other_Interaction Parms{};

	Parms.Index_0 = Index_0;
	Parms.Source = Source;
	Parms.Item_State = std::move(Item_State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BatteryCharger.BatteryCharger_C.Pause Process
// (BlueprintCallable, BlueprintEvent)

void ABatteryCharger_C::Pause_Process()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "Pause Process");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BatteryCharger.BatteryCharger_C.Process Screen
// (Public, BlueprintCallable, BlueprintEvent)

void ABatteryCharger_C::Process_Screen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "Process Screen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BatteryCharger.BatteryCharger_C.Process Tick
// (BlueprintCallable, BlueprintEvent)

void ABatteryCharger_C::Process_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "Process Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BatteryCharger.BatteryCharger_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABatteryCharger_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BatteryCharger.BatteryCharger_C.Start Process
// (BlueprintCallable, BlueprintEvent)

void ABatteryCharger_C::Start_Process()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "Start Process");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BatteryCharger.BatteryCharger_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABatteryCharger_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BatteryCharger_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

