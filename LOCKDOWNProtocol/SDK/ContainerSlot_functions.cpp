#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ContainerSlot

#include "Basic.hpp"

#include "ContainerSlot_classes.hpp"
#include "ContainerSlot_parameters.hpp"


namespace SDK
{

// Function ContainerSlot.ContainerSlot_C.Get Content
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Container_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStr_ItemState*                  Content_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AContainerSlot_C::Get_Content(bool* Container_0, struct FStr_ItemState* Content_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "Get Content");

	Params::ContainerSlot_C_Get_Content Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Container_0 != nullptr)
		*Container_0 = Parms.Container_0;

	if (Content_0 != nullptr)
		*Content_0 = std::move(Parms.Content_0);
}


// Function ContainerSlot.ContainerSlot_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AContainerSlot_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContainerSlot.ContainerSlot_C.Timeline__FinishedFunc
// (BlueprintEvent)

void AContainerSlot_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContainerSlot.ContainerSlot_C.Timeline__UpdateFunc
// (BlueprintEvent)

void AContainerSlot_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContainerSlot.ContainerSlot_C.Anim Container
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AContainerSlot_C::Anim_Container(bool In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "Anim Container");

	Params::ContainerSlot_C_Anim_Container Parms{};

	Parms.In = In;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ContainerSlot.ContainerSlot_C.Force State
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ContainerSlot_State                   State_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Content_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AContainerSlot_C::Force_State(E_ContainerSlot_State State_0, const struct FStr_ItemState& Content_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "Force State");

	Params::ContainerSlot_C_Force_State Parms{};

	Parms.State_0 = State_0;
	Parms.Content_0 = std::move(Content_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ContainerSlot.ContainerSlot_C.BndEvt__ContainerSlot_Container_K2Node_ComponentBoundEvent_0_Place Item__DelegateSignature
// (BlueprintEvent)

void AContainerSlot_C::BndEvt__ContainerSlot_Container_K2Node_ComponentBoundEvent_0_Place_Item__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "BndEvt__ContainerSlot_Container_K2Node_ComponentBoundEvent_0_Place Item__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContainerSlot.ContainerSlot_C.BndEvt__ContainerSlot_Container_K2Node_ComponentBoundEvent_1_Take Item__DelegateSignature
// (BlueprintEvent)

void AContainerSlot_C::BndEvt__ContainerSlot_Container_K2Node_ComponentBoundEvent_1_Take_Item__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "BndEvt__ContainerSlot_Container_K2Node_ComponentBoundEvent_1_Take Item__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContainerSlot.ContainerSlot_C.Move In
// (BlueprintCallable, BlueprintEvent)

void AContainerSlot_C::Move_In()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "Move In");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContainerSlot.ContainerSlot_C.Move Out
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FStr_ItemState&            Content_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Locked                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AContainerSlot_C::Move_Out(const struct FStr_ItemState& Content_0, bool Locked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "Move Out");

	Params::ContainerSlot_C_Move_Out Parms{};

	Parms.Content_0 = std::move(Content_0);
	Parms.Locked = Locked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ContainerSlot.ContainerSlot_C.Lock
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AContainerSlot_C::Lock(bool Lock_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "Lock");

	Params::ContainerSlot_C_Lock Parms{};

	Parms.Lock_0 = Lock_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ContainerSlot.ContainerSlot_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AContainerSlot_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContainerSlot.ContainerSlot_C.Update Location
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AContainerSlot_C::Update_Location(const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "Update Location");

	Params::ContainerSlot_C_Update_Location Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ContainerSlot.ContainerSlot_C.ExecuteUbergraph_ContainerSlot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AContainerSlot_C::ExecuteUbergraph_ContainerSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ContainerSlot_C", "ExecuteUbergraph_ContainerSlot");

	Params::ContainerSlot_C_ExecuteUbergraph_ContainerSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

