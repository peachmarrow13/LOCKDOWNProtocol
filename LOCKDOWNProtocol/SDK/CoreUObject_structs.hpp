#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CoreUObject

#include "Basic.hpp"


namespace SDK
{

// Enum CoreUObject.EAutomationEventType
// NumValues: 0x0004
enum class EAutomationEventType : uint8
{
	Info                                     = 0,
	Warning                                  = 1,
	Error                                    = 2,
	EAutomationEventType_MAX                 = 3,
};

// Enum CoreUObject.ERangeBoundTypes
// NumValues: 0x0004
enum class ERangeBoundTypes : uint8
{
	Exclusive                                = 0,
	Inclusive                                = 1,
	Open                                     = 2,
	ERangeBoundTypes_MAX                     = 3,
};

// Enum CoreUObject.EInterpCurveMode
// NumValues: 0x0007
enum class EInterpCurveMode : uint8
{
	CIM_Linear                               = 0,
	CIM_CurveAuto                            = 1,
	CIM_Constant                             = 2,
	CIM_CurveUser                            = 3,
	CIM_CurveBreak                           = 4,
	CIM_CurveAutoClamped                     = 5,
	CIM_MAX                                  = 6,
};

// Enum CoreUObject.EInputDeviceConnectionState
// NumValues: 0x0005
enum class EInputDeviceConnectionState : uint8
{
	Invalid                                  = 0,
	Unknown                                  = 1,
	Disconnected                             = 2,
	Connected                                = 3,
	EInputDeviceConnectionState_MAX          = 4,
};

// Enum CoreUObject.ELocalizedTextSourceCategory
// NumValues: 0x0004
enum class ELocalizedTextSourceCategory : uint8
{
	Game                                     = 0,
	Engine                                   = 1,
	Editor                                   = 2,
	ELocalizedTextSourceCategory_MAX         = 3,
};

// Enum CoreUObject.ELifetimeCondition
// NumValues: 0x0012
enum class ELifetimeCondition : uint8
{
	COND_None                                = 0,
	COND_InitialOnly                         = 1,
	COND_OwnerOnly                           = 2,
	COND_SkipOwner                           = 3,
	COND_SimulatedOnly                       = 4,
	COND_AutonomousOnly                      = 5,
	COND_SimulatedOrPhysics                  = 6,
	COND_InitialOrOwner                      = 7,
	COND_Custom                              = 8,
	COND_ReplayOrOwner                       = 9,
	COND_ReplayOnly                          = 10,
	COND_SimulatedOnlyNoReplay               = 11,
	COND_SimulatedOrPhysicsNoReplay          = 12,
	COND_SkipReplay                          = 13,
	COND_Dynamic                             = 14,
	COND_Never                               = 15,
	COND_NetGroup                            = 16,
	COND_Max                                 = 17,
};

// Enum CoreUObject.EDataValidationUsecase
// NumValues: 0x0007
enum class EDataValidationUsecase : uint8
{
	None                                     = 0,
	Manual                                   = 1,
	Commandlet                               = 2,
	Save                                     = 3,
	PreSubmit                                = 4,
	Script                                   = 5,
	EDataValidationUsecase_MAX               = 6,
};

// Enum CoreUObject.ETestInstanceDataObjectBird
// NumValues: 0x0008
enum class ETestInstanceDataObjectBird : uint8
{
	TIDOB_None                               = 0,
	TIDOB_Cardinal                           = 1,
	TIDOB_Crow                               = 2,
	TIDOB_Eagle                              = 3,
	TIDOB_Hawk                               = 4,
	TIDOB_Owl                                = 5,
	TIDOB_Raven                              = 6,
	TIDOB_MAX                                = 7,
};

// Enum CoreUObject.ETestInstanceDataObjectGrain
// NumValues: 0x0007
enum class ETestInstanceDataObjectGrain : uint8
{
	None                                     = 0,
	Barley                                   = 1,
	Corn                                     = 2,
	Quinoa                                   = 3,
	Rice                                     = 4,
	Wheat                                    = 5,
	ETestInstanceDataObjectGrain_MAX         = 6,
};

// Enum CoreUObject.ETestInstanceDataObjectGrainAlternate
// NumValues: 0x0006
enum class ETestInstanceDataObjectGrainAlternate : uint8
{
	None                                     = 0,
	Corn                                     = 1,
	Rice                                     = 2,
	Rye                                      = 3,
	Wheat                                    = 4,
	ETestInstanceDataObjectGrainAlternate_MAX = 5,
};

// Enum CoreUObject.ETestInstanceDataObjectGrainAlternateEnumClass
// NumValues: 0x0006
enum class ETestInstanceDataObjectGrainAlternateEnumClass : uint8
{
	None                                     = 0,
	Corn                                     = 1,
	Rice                                     = 2,
	Rye                                      = 3,
	Wheat                                    = 4,
	ETestInstanceDataObjectGrainAlternateEnumClass_MAX = 5,
};

// Enum CoreUObject.ETestInstanceDataObjectFruit
// NumValues: 0x0006
enum class ETestInstanceDataObjectFruit : uint8
{
	None                                     = 0,
	Apple                                    = 1,
	Banana                                   = 2,
	Lemon                                    = 3,
	Orange                                   = 4,
	ETestInstanceDataObjectFruit_MAX         = 5,
};

// Enum CoreUObject.ETestInstanceDataObjectFruitAlternate
// NumValues: 0x0006
enum class ETestInstanceDataObjectFruitAlternate : uint8
{
	None                                     = 0,
	Apple                                    = 1,
	Cherry                                   = 2,
	Orange                                   = 3,
	Pear                                     = 4,
	ETestInstanceDataObjectFruitAlternate_MAX = 5,
};

// Enum CoreUObject.ETestInstanceDataObjectFruitAlternateNamespace
// NumValues: 0x0006
enum class ETestInstanceDataObjectFruitAlternateNamespace : uint8
{
	None                                     = 0,
	Apple                                    = 1,
	Cherry                                   = 2,
	Orange                                   = 3,
	Pear                                     = 4,
	ETestInstanceDataObjectFruitAlternateNamespace_MAX = 5,
};

// Enum CoreUObject.ETestInstanceDataObjectDirection
// NumValues: 0x0006
enum class ETestInstanceDataObjectDirection : uint16
{
	None                                     = 0,
	North                                    = 1,
	East                                     = 2,
	South                                    = 4,
	West                                     = 8,
	ETestInstanceDataObjectDirection_MAX     = 16,
};

// Enum CoreUObject.ETestInstanceDataObjectDirectionAlternate
// NumValues: 0x0008
enum class ETestInstanceDataObjectDirectionAlternate : uint16
{
	None                                     = 0,
	Up                                       = 1,
	Down                                     = 2,
	North                                    = 4,
	East                                     = 8,
	South                                    = 16,
	West                                     = 32,
	ETestInstanceDataObjectDirectionAlternate_MAX = 64,
};

// Enum CoreUObject.ETestInstanceDataObjectFullFlags
// NumValues: 0x0009
enum class ETestInstanceDataObjectFullFlags : uint8
{
	None                                     = 0,
	Flag0                                    = 1,
	Flag1                                    = 2,
	Flag2                                    = 4,
	Flag4                                    = 16,
	Flag5                                    = 32,
	Flag6                                    = 64,
	Flag7                                    = 128,
	ETestInstanceDataObjectFullFlags_MAX     = 248,
};

// Enum CoreUObject.ESearchCase
// NumValues: 0x0003
enum class ESearchCase : uint8
{
	CaseSensitive                            = 0,
	IgnoreCase                               = 1,
	ESearchCase_MAX                          = 2,
};

// Enum CoreUObject.ESearchDir
// NumValues: 0x0003
enum class ESearchDir : uint8
{
	FromStart                                = 0,
	FromEnd                                  = 1,
	ESearchDir_MAX                           = 2,
};

// Enum CoreUObject.ELogTimes
// NumValues: 0x0005
enum class ELogTimes : uint8
{
	None                                     = 0,
	UTC                                      = 1,
	SinceGStartTime                          = 2,
	Local                                    = 3,
	ELogTimes_MAX                            = 4,
};

// Enum CoreUObject.EAxis
// NumValues: 0x0005
enum class EAxis : uint8
{
	None                                     = 0,
	X                                        = 1,
	Y                                        = 2,
	Z                                        = 3,
	EAxis_MAX                                = 4,
};

// Enum CoreUObject.EAxisList
// NumValues: 0x000D
enum class EAxisList : uint8
{
	None                                     = 0,
	X                                        = 1,
	Y                                        = 2,
	Z                                        = 4,
	Screen                                   = 8,
	XY                                       = 3,
	XZ                                       = 5,
	YZ                                       = 6,
	XYZ                                      = 7,
	All                                      = 15,
	ZRotation                                = 6,
	Rotate2D                                 = 8,
	EAxisList_MAX                            = 16,
};

// Enum CoreUObject.EPixelFormat
// NumValues: 0x005E
enum class EPixelFormat : uint8
{
	PF_Unknown                               = 0,
	PF_A32B32G32R32F                         = 1,
	PF_B8G8R8A8                              = 2,
	PF_G8                                    = 3,
	PF_G16                                   = 4,
	PF_DXT1                                  = 5,
	PF_DXT3                                  = 6,
	PF_DXT5                                  = 7,
	PF_UYVY                                  = 8,
	PF_FloatRGB                              = 9,
	PF_FloatRGBA                             = 10,
	PF_DepthStencil                          = 11,
	PF_ShadowDepth                           = 12,
	PF_R32_FLOAT                             = 13,
	PF_G16R16                                = 14,
	PF_G16R16F                               = 15,
	PF_G16R16F_FILTER                        = 16,
	PF_G32R32F                               = 17,
	PF_A2B10G10R10                           = 18,
	PF_A16B16G16R16                          = 19,
	PF_D24                                   = 20,
	PF_R16F                                  = 21,
	PF_R16F_FILTER                           = 22,
	PF_BC5                                   = 23,
	PF_V8U8                                  = 24,
	PF_A1                                    = 25,
	PF_FloatR11G11B10                        = 26,
	PF_A8                                    = 27,
	PF_R32_UINT                              = 28,
	PF_R32_SINT                              = 29,
	PF_PVRTC2                                = 30,
	PF_PVRTC4                                = 31,
	PF_R16_UINT                              = 32,
	PF_R16_SINT                              = 33,
	PF_R16G16B16A16_UINT                     = 34,
	PF_R16G16B16A16_SINT                     = 35,
	PF_R5G6B5_UNORM                          = 36,
	PF_R8G8B8A8                              = 37,
	PF_A8R8G8B8                              = 38,
	PF_BC4                                   = 39,
	PF_R8G8                                  = 40,
	PF_ATC_RGB                               = 41,
	PF_ATC_RGBA_E                            = 42,
	PF_ATC_RGBA_I                            = 43,
	PF_X24_G8                                = 44,
	PF_ETC1                                  = 45,
	PF_ETC2_RGB                              = 46,
	PF_ETC2_RGBA                             = 47,
	PF_R32G32B32A32_UINT                     = 48,
	PF_R16G16_UINT                           = 49,
	PF_ASTC_4x4                              = 50,
	PF_ASTC_6x6                              = 51,
	PF_ASTC_8x8                              = 52,
	PF_ASTC_10x10                            = 53,
	PF_ASTC_12x12                            = 54,
	PF_BC6H                                  = 55,
	PF_BC7                                   = 56,
	PF_R8_UINT                               = 57,
	PF_L8                                    = 58,
	PF_XGXR8                                 = 59,
	PF_R8G8B8A8_UINT                         = 60,
	PF_R8G8B8A8_SNORM                        = 61,
	PF_R16G16B16A16_UNORM                    = 62,
	PF_R16G16B16A16_SNORM                    = 63,
	PF_PLATFORM_HDR_0                        = 64,
	PF_PLATFORM_HDR_1                        = 65,
	PF_PLATFORM_HDR_2                        = 66,
	PF_NV12                                  = 67,
	PF_R32G32_UINT                           = 68,
	PF_ETC2_R11_EAC                          = 69,
	PF_ETC2_RG11_EAC                         = 70,
	PF_R8                                    = 71,
	PF_B5G5R5A1_UNORM                        = 72,
	PF_ASTC_4x4_HDR                          = 73,
	PF_ASTC_6x6_HDR                          = 74,
	PF_ASTC_8x8_HDR                          = 75,
	PF_ASTC_10x10_HDR                        = 76,
	PF_ASTC_12x12_HDR                        = 77,
	PF_G16R16_SNORM                          = 78,
	PF_R8G8_UINT                             = 79,
	PF_R32G32B32_UINT                        = 80,
	PF_R32G32B32_SINT                        = 81,
	PF_R32G32B32F                            = 82,
	PF_R8_SINT                               = 83,
	PF_R64_UINT                              = 84,
	PF_R9G9B9EXP5                            = 85,
	PF_P010                                  = 86,
	PF_ASTC_4x4_NORM_RG                      = 87,
	PF_ASTC_6x6_NORM_RG                      = 88,
	PF_ASTC_8x8_NORM_RG                      = 89,
	PF_ASTC_10x10_NORM_RG                    = 90,
	PF_ASTC_12x12_NORM_RG                    = 91,
	PF_R16G16_SINT                           = 92,
	PF_MAX_0                                 = 93,
};

// Enum CoreUObject.EMouseCursor
// NumValues: 0x0010
enum class EMouseCursor : uint8
{
	None                                     = 0,
	Default                                  = 1,
	TextEditBeam                             = 2,
	ResizeLeftRight                          = 3,
	ResizeUpDown                             = 4,
	ResizeSouthEast                          = 5,
	ResizeSouthWest                          = 6,
	CardinalCross                            = 7,
	Crosshairs                               = 8,
	Hand                                     = 9,
	GrabHand                                 = 10,
	GrabHandClosed                           = 11,
	SlashedCircle                            = 12,
	EyeDropper                               = 13,
	Custom                                   = 14,
	EMouseCursor_MAX                         = 15,
};

// Enum CoreUObject.EUnit
// NumValues: 0x004D
enum class EUnit : uint8
{
	Micrometers                              = 0,
	Millimeters                              = 1,
	Centimeters                              = 2,
	Meters                                   = 3,
	Kilometers                               = 4,
	Inches                                   = 5,
	Feet                                     = 6,
	Yards                                    = 7,
	Miles                                    = 8,
	Lightyears                               = 9,
	Degrees                                  = 10,
	Radians                                  = 11,
	CentimetersPerSecond                     = 12,
	MetersPerSecond                          = 13,
	KilometersPerHour                        = 14,
	MilesPerHour                             = 15,
	DegreesPerSecond                         = 16,
	RadiansPerSecond                         = 17,
	CentimetersPerSecondSquared              = 18,
	MetersPerSecondSquared                   = 19,
	Celsius                                  = 20,
	Farenheit                                = 21,
	Kelvin                                   = 22,
	Micrograms                               = 23,
	Milligrams                               = 24,
	Grams                                    = 25,
	Kilograms                                = 26,
	MetricTons                               = 27,
	Ounces                                   = 28,
	Pounds                                   = 29,
	Stones                                   = 30,
	GramsPerCubicCentimeter                  = 31,
	GramsPerCubicMeter                       = 32,
	KilogramsPerCubicCentimeter              = 33,
	KilogramsPerCubicMeter                   = 34,
	Newtons                                  = 35,
	PoundsForce                              = 36,
	KilogramsForce                           = 37,
	KilogramCentimetersPerSecondSquared      = 38,
	NewtonMeters                             = 39,
	KilogramCentimetersSquaredPerSecondSquared = 40,
	NewtonSeconds                            = 41,
	KilogramCentimeters                      = 42,
	KilogramMeters                           = 43,
	Hertz                                    = 44,
	Kilohertz                                = 45,
	Megahertz                                = 46,
	Gigahertz                                = 47,
	RevolutionsPerMinute                     = 48,
	Bytes                                    = 49,
	Kilobytes                                = 50,
	Megabytes                                = 51,
	Gigabytes                                = 52,
	Terabytes                                = 53,
	Lumens                                   = 54,
	Candela                                  = 55,
	Lux                                      = 56,
	CandelaPerMeter2                         = 57,
	ExposureValue                            = 58,
	Nanoseconds                              = 59,
	Microseconds                             = 60,
	Milliseconds                             = 61,
	Seconds                                  = 62,
	Minutes                                  = 63,
	Hours                                    = 64,
	Days                                     = 65,
	Months                                   = 66,
	Years                                    = 67,
	PixelsPerInch                            = 68,
	Percentage                               = 69,
	Multiplier                               = 70,
	Pascals                                  = 71,
	KiloPascals                              = 72,
	MegaPascals                              = 73,
	GigaPascals                              = 74,
	Unspecified                              = 75,
	EUnit_MAX                                = 76,
};

// Enum CoreUObject.EPropertyAccessChangeNotifyMode
// NumValues: 0x0004
enum class EPropertyAccessChangeNotifyMode : uint8
{
	Default                                  = 0,
	Never                                    = 1,
	Always                                   = 2,
	EPropertyAccessChangeNotifyMode_MAX      = 3,
};

// Enum CoreUObject.EAppMsgCategory
// NumValues: 0x0005
enum class EAppMsgCategory : uint8
{
	Warning                                  = 0,
	Error                                    = 1,
	Success                                  = 2,
	Info                                     = 3,
	EAppMsgCategory_MAX                      = 4,
};

// Enum CoreUObject.EAppReturnType
// NumValues: 0x0009
enum class EAppReturnType : uint8
{
	No                                       = 0,
	Yes                                      = 1,
	YesAll                                   = 2,
	NoAll                                    = 3,
	Cancel                                   = 4,
	Ok                                       = 5,
	Retry                                    = 6,
	Continue                                 = 7,
	EAppReturnType_MAX                       = 8,
};

// Enum CoreUObject.EAppMsgType
// NumValues: 0x0009
enum class EAppMsgType : uint8
{
	Ok                                       = 0,
	YesNo                                    = 1,
	OkCancel                                 = 2,
	YesNoCancel                              = 3,
	CancelRetryContinue                      = 4,
	YesNoYesAllNoAll                         = 5,
	YesNoYesAllNoAllCancel                   = 6,
	YesNoYesAll                              = 7,
	EAppMsgType_MAX                          = 8,
};

// Enum CoreUObject.EInputDeviceTriggerMask
// NumValues: 0x0005
enum class EInputDeviceTriggerMask : uint8
{
	None                                     = 0,
	Left                                     = 1,
	Right                                    = 2,
	All                                      = 3,
	EInputDeviceTriggerMask_MAX              = 4,
};

// Enum CoreUObject.EInputDeviceAnalogStickMask
// NumValues: 0x0004
enum class EInputDeviceAnalogStickMask : uint8
{
	None                                     = 0,
	Left                                     = 1,
	Right                                    = 2,
	EInputDeviceAnalogStickMask_MAX          = 3,
};

// Enum CoreUObject.EDataValidationResult
// NumValues: 0x0004
enum class EDataValidationResult : uint8
{
	Invalid                                  = 0,
	Valid                                    = 1,
	NotValidated                             = 2,
	EDataValidationResult_MAX                = 3,
};

// Enum CoreUObject.EOverriddenPropertyOperation
// NumValues: 0x0006
enum class EOverriddenPropertyOperation : uint8
{
	None                                     = 0,
	Modified                                 = 1,
	Replace                                  = 2,
	Add                                      = 3,
	Remove                                   = 4,
	EOverriddenPropertyOperation_MAX         = 5,
};

// Enum CoreUObject.EFallbackEnum
// NumValues: 0x0001
enum class EFallbackEnum : uint8
{
	EFallbackEnum_MAX                        = 1,
};

// Enum CoreUObject.EUserDefinedStructureStatus
// NumValues: 0x0005
enum class EUserDefinedStructureStatus : uint8
{
	UDSS_UpToDate                            = 0,
	UDSS_Dirty                               = 1,
	UDSS_Error                               = 2,
	UDSS_Duplicate                           = 3,
	UDSS_MAX                                 = 4,
};

// Enum CoreUObject.EVersePackageScope
// NumValues: 0x0005
enum class EVersePackageScope : uint8
{
	PublicAPI                                = 0,
	InternalAPI                              = 1,
	PublicUser                               = 2,
	InternalUser                             = 3,
	EVersePackageScope_MAX                   = 4,
};

// Enum CoreUObject.EVersePackageType
// NumValues: 0x0005
enum class EVersePackageType : uint8
{
	VNI                                      = 0,
	Content                                  = 1,
	PublishedContent                         = 2,
	Assets                                   = 3,
	EVersePackageType_MAX                    = 4,
};

// Enum CoreUObject.EVerseEnumFlags
// NumValues: 0x0003
enum class EVerseEnumFlags : uint32
{
	None                                     = 0,
	NativeBound                              = 1,
	EVerseEnumFlags_MAX                      = 2,
};

// Enum CoreUObject.EVerseFalse
// NumValues: 0x0002
enum class EVerseFalse : uint8
{
	Value                                    = 0,
	EVerseFalse_MAX                          = 1,
};

// Enum CoreUObject.EVerseTrue
// NumValues: 0x0002
enum class EVerseTrue : uint8
{
	Value                                    = 0,
	EVerseTrue_MAX                           = 1,
};

// Enum CoreUObject.EPropertyBagPropertyType
// NumValues: 0x0014
enum class EPropertyBagPropertyType : uint8
{
	None                                     = 0,
	Bool                                     = 1,
	Byte                                     = 2,
	Int32                                    = 3,
	Int64                                    = 4,
	Float                                    = 5,
	Double                                   = 6,
	Name                                     = 7,
	String                                   = 8,
	Text                                     = 9,
	Enum                                     = 10,
	Struct                                   = 11,
	Object                                   = 12,
	SoftObject                               = 13,
	Class                                    = 14,
	SoftClass                                = 15,
	UInt32                                   = 16,
	UInt64                                   = 17,
	Count                                    = 18,
	EPropertyBagPropertyType_MAX             = 19,
};

// Enum CoreUObject.EPropertyBagContainerType
// NumValues: 0x0005
enum class EPropertyBagContainerType : uint8
{
	None                                     = 0,
	Array                                    = 1,
	Set                                      = 2,
	Count                                    = 3,
	EPropertyBagContainerType_MAX            = 4,
};

// Enum CoreUObject.EPropertyBagResult
// NumValues: 0x0006
enum class EPropertyBagResult : uint8
{
	Success                                  = 0,
	TypeMismatch                             = 1,
	OutOfBounds                              = 2,
	PropertyNotFound                         = 3,
	DuplicatedValue                          = 4,
	EPropertyBagResult_MAX                   = 5,
};

// Enum CoreUObject.EPropertyBagMissingEnum
// NumValues: 0x0002
enum class EPropertyBagMissingEnum : uint8
{
	Missing                                  = 0,
	EPropertyBagMissingEnum_MAX              = 1,
};

// Enum CoreUObject.EVerseEffectSet
// NumValues: 0x0009
enum class EVerseEffectSet : uint8
{
	None                                     = 0,
	Suspends                                 = 1,
	Decides                                  = 2,
	Diverges                                 = 4,
	Reads                                    = 8,
	Writes                                   = 16,
	Allocates                                = 32,
	NoRollback                               = 64,
	EVerseEffectSet_MAX                      = 128,
};

// ScriptStruct CoreUObject.Vector
// 0x0018 (0x0018 - 0x0000)
struct FVector
{
public:
	using UnderlayingType = double;

	double                                        X;                                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Y;                                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Z;                                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	constexpr FVector(UnderlayingType X = 0, UnderlayingType Y = 0, UnderlayingType Z = 0)
		: X(X), Y(Y), Z(Z)
	{
	}
	constexpr FVector(const FVector& other)
		: X(other.X), Y(other.Y), Z(other.Z)
	{
	}
	FVector& Normalize()
	{
		*this /= Magnitude();
	
		return *this;
	}
	FVector& operator*=(UnderlayingType Scalar)
	{
		*this = *this * Scalar;
	
		return *this;
	}
	FVector& operator*=(const FVector& Other)
	{
		*this = *this * Other;
	
		return *this;
	}
	FVector& operator+=(const FVector& Other)
	{
		*this = *this + Other;
	
		return *this;
	}
	FVector& operator-=(const FVector& Other)
	{
		*this = *this - Other;
	
		return *this;
	}
	FVector& operator/=(UnderlayingType Scalar)
	{
		*this = *this / Scalar;
	
		return *this;
	}
	FVector& operator/=(const FVector& Other)
	{
		*this = *this / Other;
	
		return *this;
	}
	FVector& operator=(const FVector& other)
	{
		X = other.X;
		Y = other.Y;
		Z = other.Z;
	
		return *this;
	}

	UnderlayingType Dot(const FVector& Other) const
	{
		return (X * Other.X) + (Y * Other.Y) + (Z * Other.Z);
	}
	UnderlayingType GetDistanceTo(const FVector& Other) const
	{
		FVector DiffVector = Other - *this;
	
		return DiffVector.Magnitude();
	}
	UnderlayingType GetDistanceToInMeters(const FVector& Other) const
	{
		return GetDistanceTo(Other) * static_cast<UnderlayingType>(0.01);
	}
	FVector GetNormalized() const
	{
		return *this / Magnitude();
	}
	bool IsZero() const
	{
		return X == 0 && Y == 0 && Z == 0;
	}
	UnderlayingType Magnitude() const
	{
		return std::sqrt((X * X) + (Y * Y) + (Z * Z));
	}
	bool operator!=(const FVector& Other) const
	{
		return X != Other.X || Y != Other.Y || Z != Other.Z;
	}
	FVector operator*(UnderlayingType Scalar) const
	{
		return { X * Scalar, Y * Scalar, Z * Scalar };
	}
	FVector operator*(const FVector& Other) const
	{
		return { X * Other.X, Y * Other.Y, Z * Other.Z };
	}
	FVector operator+(const FVector& Other) const
	{
		return { X + Other.X, Y + Other.Y, Z + Other.Z };
	}
	FVector operator-(const FVector& Other) const
	{
		return { X - Other.X, Y - Other.Y, Z - Other.Z };
	}
	FVector operator/(UnderlayingType Scalar) const
	{
		if (Scalar == 0)
			return *this;
	
		return { X / Scalar, Y / Scalar, Z / Scalar };
	}
	FVector operator/(const FVector& Other) const
	{
		if (Other.X == 0 || Other.Y == 0 || Other.Z == 0)
			return *this;
	
		return { X / Other.X, Y / Other.Y, Z / Other.Z };
	}
	bool operator==(const FVector& Other) const
	{
		return X == Other.X && Y == Other.Y && Z == Other.Z;
	}
};
DUMPER7_ASSERTS_FVector;

// ScriptStruct CoreUObject.InterpCurvePointVector
// 0x0058 (0x0058 - 0x0000)
struct FInterpCurvePointVector final
{
public:
	float                                         InVal;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OutVal;                                            // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ArriveTangent;                                     // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LeaveTangent;                                      // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInterpCurveMode                              InterpMode;                                        // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInterpCurvePointVector;

// ScriptStruct CoreUObject.TopLevelAssetPath
// 0x0010 (0x0010 - 0x0000)
struct FTopLevelAssetPath final
{
public:
	class FName                                   PackageName;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   AssetName;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FTopLevelAssetPath;

// ScriptStruct CoreUObject.SoftObjectPath
// 0x0020 (0x0020 - 0x0000)
struct FSoftObjectPath
{
public:
	struct FTopLevelAssetPath                     AssetPath;                                         // 0x0000(0x0010)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SubPathString;                                     // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSoftObjectPath;

// ScriptStruct CoreUObject.ARFilter
// 0x0150 (0x0150 - 0x0000)
struct FARFilter final
{
public:
	TArray<class FName>                           PackageNames;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                           PackagePaths;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                SoftObjectPaths;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                           ClassNames;                                        // 0x0030(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTopLevelAssetPath>             ClassPaths;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x50];                                      // 0x0050(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FName>                             RecursiveClassesExclusionSet;                      // 0x00A0(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
	TSet<struct FTopLevelAssetPath>               RecursiveClassPathsExclusionSet;                   // 0x00F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bRecursivePaths;                                   // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecursiveClasses;                                 // 0x0141(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeOnlyOnDiskAssets;                          // 0x0142(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_143[0xD];                                      // 0x0143(0x000D)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FARFilter;

// ScriptStruct CoreUObject.Vector2D
// 0x0010 (0x0010 - 0x0000)
struct FVector2D final
{
public:
	using UnderlayingType = double;

	double                                        X;                                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Y;                                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	constexpr FVector2D(UnderlayingType X = 0, UnderlayingType Y = 0)
		: X(X), Y(Y)
	{
	}
	constexpr FVector2D(const FVector2D& other)
		: X(other.X), Y(other.Y)
	{
	}
	FVector2D& Normalize()
	{
		*this /= Magnitude();
	
		return *this;
	}
	FVector2D& operator*=(UnderlayingType Scalar)
	{
		*this = *this * Scalar;
	
		return *this;
	}
	FVector2D& operator*=(const FVector2D& Other)
	{
		*this = *this * Other;
	
		return *this;
	}
	FVector2D& operator+=(const FVector2D& Other)
	{
		*this = *this + Other;
	
		return *this;
	}
	FVector2D& operator-=(const FVector2D& Other)
	{
		*this = *this - Other;
	
		return *this;
	}
	FVector2D& operator/=(UnderlayingType Scalar)
	{
		*this = *this / Scalar;
	
		return *this;
	}
	FVector2D& operator/=(const FVector2D& Other)
	{
		*this = *this / Other;
	
		return *this;
	}
	FVector2D& operator=(const FVector2D& other)
	{
		X = other.X;
		Y = other.Y;
	
		return *this;
	}

	UnderlayingType Dot(const FVector2D& Other) const
	{
		return (X * Other.X) + (Y * Other.Y);
	}
	UnderlayingType GetDistanceTo(const FVector2D& Other) const
	{
		FVector2D DiffVector = Other - *this;
	
		return DiffVector.Magnitude();
	}
	FVector2D GetNormalized() const
	{
		return *this / Magnitude();
	}
	bool IsZero() const
	{
		return X == 0 && Y == 0;
	}
	UnderlayingType Magnitude() const
	{
		return std::sqrt((X * X) + (Y * Y));
	}
	bool operator!=(const FVector2D& Other) const
	{
		return X != Other.X || Y != Other.Y;
	}
	FVector2D operator*(UnderlayingType Scalar) const
	{
		return { X * Scalar, Y * Scalar };
	}
	FVector2D operator*(const FVector2D& Other) const
	{
		return { X * Other.X, Y * Other.Y };
	}
	FVector2D operator+(const FVector2D& Other) const
	{
		return { X + Other.X, Y + Other.Y };
	}
	FVector2D operator-(const FVector2D& Other) const
	{
		return { X - Other.X, Y - Other.Y  };
	}
	FVector2D operator/(UnderlayingType Scalar) const
	{
		if (Scalar == 0)
			return *this;
	
		return { X / Scalar, Y / Scalar };
	}
	FVector2D operator/(const FVector2D& Other) const
	{
		if (Other.X == 0 || Other.Y == 0)
			return *this;
	
		return { X / Other.X, Y / Other.Y };
	}
	bool operator==(const FVector2D& Other) const
	{
		return X == Other.X && Y == Other.Y;
	}
};
DUMPER7_ASSERTS_FVector2D;

// ScriptStruct CoreUObject.InterpCurvePointVector2D
// 0x0040 (0x0040 - 0x0000)
struct FInterpCurvePointVector2D final
{
public:
	float                                         InVal;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              OutVal;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ArriveTangent;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              LeaveTangent;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInterpCurveMode                              InterpMode;                                        // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInterpCurvePointVector2D;

// ScriptStruct CoreUObject.Quat
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x10) FQuat final
{
public:
	double                                        X;                                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Y;                                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Z;                                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        W;                                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQuat;

// ScriptStruct CoreUObject.InterpCurvePointQuat
// 0x0080 (0x0080 - 0x0000)
struct FInterpCurvePointQuat final
{
public:
	float                                         InVal;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  OutVal;                                            // 0x0010(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  ArriveTangent;                                     // 0x0030(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  LeaveTangent;                                      // 0x0050(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInterpCurveMode                              InterpMode;                                        // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0xF];                                       // 0x0071(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInterpCurvePointQuat;

// ScriptStruct CoreUObject.InterpCurveQuat
// 0x0018 (0x0018 - 0x0000)
struct FInterpCurveQuat final
{
public:
	TArray<struct FInterpCurvePointQuat>          Points;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsLooped;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LoopKeyOffset;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInterpCurveQuat;

// ScriptStruct CoreUObject.TwoVectors
// 0x0030 (0x0030 - 0x0000)
struct FTwoVectors final
{
public:
	struct FVector                                v1;                                                // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                v2;                                                // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTwoVectors;

// ScriptStruct CoreUObject.InterpCurvePointTwoVectors
// 0x00A0 (0x00A0 - 0x0000)
struct FInterpCurvePointTwoVectors final
{
public:
	float                                         InVal;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTwoVectors                            OutVal;                                            // 0x0008(0x0030)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTwoVectors                            ArriveTangent;                                     // 0x0038(0x0030)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTwoVectors                            LeaveTangent;                                      // 0x0068(0x0030)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EInterpCurveMode                              InterpMode;                                        // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInterpCurvePointTwoVectors;

// ScriptStruct CoreUObject.InterpCurveTwoVectors
// 0x0018 (0x0018 - 0x0000)
struct FInterpCurveTwoVectors final
{
public:
	TArray<struct FInterpCurvePointTwoVectors>    Points;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsLooped;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LoopKeyOffset;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInterpCurveTwoVectors;

// ScriptStruct CoreUObject.AssetBundleEntry
// 0x0018 (0x0018 - 0x0000)
struct FAssetBundleEntry final
{
public:
	class FName                                   BundleName;                                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTopLevelAssetPath>             AssetPaths;                                        // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAssetBundleEntry;

// ScriptStruct CoreUObject.AssetBundleData
// 0x0010 (0x0010 - 0x0000)
struct FAssetBundleData final
{
public:
	TArray<struct FAssetBundleEntry>              Bundles;                                           // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAssetBundleData;

// ScriptStruct CoreUObject.VerseSessionVar
// 0x0020 (0x0020 - 0x0000)
struct FVerseSessionVar final
{
public:
	TFieldPath<class FMapProperty>                Property;                                          // 0x0000(0x0020)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVerseSessionVar;

// ScriptStruct CoreUObject.AssetData
// 0x0068 (0x0068 - 0x0000)
struct alignas(0x08) FAssetData final
{
public:
	class FName                                   PackageName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PackagePath;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AssetName;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AssetClass;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTopLevelAssetPath                     AssetClassPath;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x38];                                      // 0x0030(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAssetData;

// ScriptStruct CoreUObject.Guid
// 0x0010 (0x0010 - 0x0000)
struct FGuid final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         B;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         C;                                                 // 0x0008(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         D;                                                 // 0x000C(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGuid;

// ScriptStruct CoreUObject.AutomationEvent
// 0x0038 (0x0038 - 0x0000)
struct FAutomationEvent final
{
public:
	EAutomationEventType                          Type;                                              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Context;                                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  Artifact;                                          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAutomationEvent;

// ScriptStruct CoreUObject.DateTime
// 0x0008 (0x0008 - 0x0000)
struct FDateTime final
{
public:
	int64                                         Ticks;                                             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDateTime;

// ScriptStruct CoreUObject.AutomationExecutionEntry
// 0x0058 (0x0058 - 0x0000)
struct FAutomationExecutionEntry final
{
public:
	struct FAutomationEvent                       Event;                                             // 0x0000(0x0038)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LineNumber;                                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              Timestamp;                                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAutomationExecutionEntry;

// ScriptStruct CoreUObject.Box
// 0x0038 (0x0038 - 0x0000)
struct FBox final
{
public:
	struct FVector                                min_0;                                             // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                max_0;                                             // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBox;

// ScriptStruct CoreUObject.Box2D
// 0x0028 (0x0028 - 0x0000)
struct FBox2D final
{
public:
	struct FVector2D                              min_0;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              max_0;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsValid;                                          // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBox2D;

// ScriptStruct CoreUObject.Vector2f
// 0x0008 (0x0008 - 0x0000)
struct FVector2f
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVector2f;

// ScriptStruct CoreUObject.Box2f
// 0x0014 (0x0014 - 0x0000)
struct FBox2f final
{
public:
	struct FVector2f                              min_0;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2f                              max_0;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsValid;                                          // 0x0010(0x0001)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBox2f;

// ScriptStruct CoreUObject.PerPlatformFloat
// 0x0004 (0x0004 - 0x0000)
struct FPerPlatformFloat final
{
public:
	float                                         Default;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPerPlatformFloat;

// ScriptStruct CoreUObject.Vector3d
// 0x0018 (0x0018 - 0x0000)
struct FVector3d
{
public:
	double                                        X;                                                 // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Y;                                                 // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Z;                                                 // 0x0010(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVector3d;

// ScriptStruct CoreUObject.Box3d
// 0x0038 (0x0038 - 0x0000)
struct FBox3d final
{
public:
	struct FVector3d                              min_0;                                             // 0x0000(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector3d                              max_0;                                             // 0x0018(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0030(0x0001)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBox3d;

// ScriptStruct CoreUObject.PropertyBagContainerTypes
// 0x0003 (0x0003 - 0x0000)
struct FPropertyBagContainerTypes final
{
public:
	uint8                                         Pad_0[0x3];                                        // 0x0000(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPropertyBagContainerTypes;

// ScriptStruct CoreUObject.PropertyBagPropertyDesc
// 0x0030 (0x0030 - 0x0000)
struct FPropertyBagPropertyDesc final
{
public:
	class UObject*                                ValueTypeObject;                                   // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ID;                                                // 0x0008(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPropertyBagPropertyType                      ValueType;                                         // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPropertyBagContainerTypes             ContainerTypes;                                    // 0x0021(0x0003)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPropertyBagPropertyDesc;

// ScriptStruct CoreUObject.Vector3f
// 0x000C (0x000C - 0x0000)
struct FVector3f
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Z;                                                 // 0x0008(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVector3f;

// ScriptStruct CoreUObject.Box3f
// 0x001C (0x001C - 0x0000)
struct FBox3f final
{
public:
	struct FVector3f                              min_0;                                             // 0x0000(0x000C)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector3f                              max_0;                                             // 0x000C(0x000C)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0018(0x0001)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBox3f;

// ScriptStruct CoreUObject.BoxSphereBounds
// 0x0038 (0x0038 - 0x0000)
struct FBoxSphereBounds final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BoxExtent;                                         // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SphereRadius;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBoxSphereBounds;

// ScriptStruct CoreUObject.ConstSharedStruct
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FConstSharedStruct final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FConstSharedStruct;

// ScriptStruct CoreUObject.BoxSphereBounds3d
// 0x0038 (0x0038 - 0x0000)
struct FBoxSphereBounds3d final
{
public:
	struct FVector3d                              Origin;                                            // 0x0000(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector3d                              BoxExtent;                                         // 0x0018(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SphereRadius;                                      // 0x0030(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBoxSphereBounds3d;

// ScriptStruct CoreUObject.BoxSphereBounds3f
// 0x001C (0x001C - 0x0000)
struct FBoxSphereBounds3f final
{
public:
	struct FVector3f                              Origin;                                            // 0x0000(0x000C)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector3f                              BoxExtent;                                         // 0x000C(0x000C)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SphereRadius;                                      // 0x0018(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBoxSphereBounds3f;

// ScriptStruct CoreUObject.Color
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FColor final
{
public:
	uint8                                         B;                                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         G;                                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         R;                                                 // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         A;                                                 // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FColor;

// ScriptStruct CoreUObject.DirectoryPath
// 0x0010 (0x0010 - 0x0000)
struct FDirectoryPath final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDirectoryPath;

// ScriptStruct CoreUObject.DoubleRangeBound
// 0x0010 (0x0010 - 0x0000)
struct FDoubleRangeBound final
{
public:
	ERangeBoundTypes                              Type;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FDoubleRangeBound;

// ScriptStruct CoreUObject.DoubleRange
// 0x0020 (0x0020 - 0x0000)
struct FDoubleRange final
{
public:
	struct FDoubleRangeBound                      LowerBound;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDoubleRangeBound                      UpperBound;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FDoubleRange;

// ScriptStruct CoreUObject.FallbackStruct
// 0x0001 (0x0001 - 0x0000)
struct FFallbackStruct final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFallbackStruct;

// ScriptStruct CoreUObject.FilePath
// 0x0010 (0x0010 - 0x0000)
struct FFilePath final
{
public:
	class FString                                 FilePath;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFilePath;

// ScriptStruct CoreUObject.FloatInterval
// 0x0008 (0x0008 - 0x0000)
struct FFloatInterval final
{
public:
	float                                         min_0;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         max_0;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFloatInterval;

// ScriptStruct CoreUObject.FloatRangeBound
// 0x0008 (0x0008 - 0x0000)
struct FFloatRangeBound final
{
public:
	ERangeBoundTypes                              Type;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FFloatRangeBound;

// ScriptStruct CoreUObject.FloatRange
// 0x0010 (0x0010 - 0x0000)
struct FFloatRange final
{
public:
	struct FFloatRangeBound                       LowerBound;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatRangeBound                       UpperBound;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FFloatRange;

// ScriptStruct CoreUObject.FrameNumber
// 0x0004 (0x0004 - 0x0000)
struct FFrameNumber final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFrameNumber;

// ScriptStruct CoreUObject.FrameNumberRangeBound
// 0x0008 (0x0008 - 0x0000)
struct FFrameNumberRangeBound final
{
public:
	ERangeBoundTypes                              Type;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameNumber                           Value;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FFrameNumberRangeBound;

// ScriptStruct CoreUObject.FrameNumberRange
// 0x0010 (0x0010 - 0x0000)
struct FFrameNumberRange final
{
public:
	struct FFrameNumberRangeBound                 LowerBound;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFrameNumberRangeBound                 UpperBound;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FFrameNumberRange;

// ScriptStruct CoreUObject.FrameRate
// 0x0008 (0x0008 - 0x0000)
struct FFrameRate
{
public:
	int32                                         Numerator;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Denominator;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFrameRate;

// ScriptStruct CoreUObject.FrameTime
// 0x0008 (0x0008 - 0x0000)
struct FFrameTime final
{
public:
	struct FFrameNumber                           FrameNumber;                                       // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SubFrame;                                          // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FFrameTime;

// ScriptStruct CoreUObject.InputDeviceId
// 0x0004 (0x0004 - 0x0000)
struct FInputDeviceId final
{
public:
	int32                                         InternalId;                                        // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FInputDeviceId;

// ScriptStruct CoreUObject.Int32Interval
// 0x0008 (0x0008 - 0x0000)
struct FInt32Interval final
{
public:
	int32                                         min_0;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         max_0;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInt32Interval;

// ScriptStruct CoreUObject.Int32Point
// 0x0008 (0x0008 - 0x0000)
struct FInt32Point final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInt32Point;

// ScriptStruct CoreUObject.Int32RangeBound
// 0x0008 (0x0008 - 0x0000)
struct FInt32RangeBound final
{
public:
	ERangeBoundTypes                              Type;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FInt32RangeBound;

// ScriptStruct CoreUObject.Int32Range
// 0x0010 (0x0010 - 0x0000)
struct FInt32Range final
{
public:
	struct FInt32RangeBound                       LowerBound;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FInt32RangeBound                       UpperBound;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FInt32Range;

// ScriptStruct CoreUObject.Int32Rect
// 0x0010 (0x0010 - 0x0000)
struct FInt32Rect final
{
public:
	struct FInt32Point                            min_0;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInt32Point                            max_0;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInt32Rect;

// ScriptStruct CoreUObject.Int32Vector
// 0x000C (0x000C - 0x0000)
struct FInt32Vector final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Z;                                                 // 0x0008(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInt32Vector;

// ScriptStruct CoreUObject.Int32Vector2
// 0x0008 (0x0008 - 0x0000)
struct FInt32Vector2 final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInt32Vector2;

// ScriptStruct CoreUObject.Int32Vector4
// 0x0010 (0x0010 - 0x0000)
struct FInt32Vector4 final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Z;                                                 // 0x0008(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         W;                                                 // 0x000C(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInt32Vector4;

// ScriptStruct CoreUObject.Int64Point
// 0x0010 (0x0010 - 0x0000)
struct FInt64Point final
{
public:
	int64                                         X;                                                 // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Y;                                                 // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInt64Point;

// ScriptStruct CoreUObject.Int64Rect
// 0x0020 (0x0020 - 0x0000)
struct FInt64Rect final
{
public:
	struct FInt64Point                            min_0;                                             // 0x0000(0x0010)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInt64Point                            max_0;                                             // 0x0010(0x0010)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInt64Rect;

// ScriptStruct CoreUObject.Int64Vector
// 0x0018 (0x0018 - 0x0000)
struct FInt64Vector final
{
public:
	int64                                         X;                                                 // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Y;                                                 // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Z;                                                 // 0x0010(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInt64Vector;

// ScriptStruct CoreUObject.Int64Vector2
// 0x0010 (0x0010 - 0x0000)
struct FInt64Vector2 final
{
public:
	int64                                         X;                                                 // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Y;                                                 // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInt64Vector2;

// ScriptStruct CoreUObject.Int64Vector4
// 0x0020 (0x0020 - 0x0000)
struct FInt64Vector4 final
{
public:
	int64                                         X;                                                 // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Y;                                                 // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Z;                                                 // 0x0010(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         W;                                                 // 0x0018(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInt64Vector4;

// ScriptStruct CoreUObject.InterpCurvePointFloat
// 0x0014 (0x0014 - 0x0000)
struct FInterpCurvePointFloat final
{
public:
	float                                         InVal;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutVal;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArriveTangent;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeaveTangent;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInterpCurveMode                              InterpMode;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInterpCurvePointFloat;

// ScriptStruct CoreUObject.InterpCurveFloat
// 0x0018 (0x0018 - 0x0000)
struct FInterpCurveFloat final
{
public:
	TArray<struct FInterpCurvePointFloat>         Points;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsLooped;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LoopKeyOffset;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInterpCurveFloat;

// ScriptStruct CoreUObject.LinearColor
// 0x0010 (0x0010 - 0x0000)
struct FLinearColor final
{
public:
	float                                         R;                                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         G;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         B;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         A;                                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLinearColor;

// ScriptStruct CoreUObject.InterpCurvePointLinearColor
// 0x0038 (0x0038 - 0x0000)
struct FInterpCurvePointLinearColor final
{
public:
	float                                         InVal;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           OutVal;                                            // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ArriveTangent;                                     // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LeaveTangent;                                      // 0x0024(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInterpCurveMode                              InterpMode;                                        // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInterpCurvePointLinearColor;

// ScriptStruct CoreUObject.InterpCurveLinearColor
// 0x0018 (0x0018 - 0x0000)
struct FInterpCurveLinearColor final
{
public:
	TArray<struct FInterpCurvePointLinearColor>   Points;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsLooped;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LoopKeyOffset;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInterpCurveLinearColor;

// ScriptStruct CoreUObject.InterpCurveVector
// 0x0018 (0x0018 - 0x0000)
struct FInterpCurveVector final
{
public:
	TArray<struct FInterpCurvePointVector>        Points;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsLooped;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LoopKeyOffset;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInterpCurveVector;

// ScriptStruct CoreUObject.InterpCurveVector2D
// 0x0018 (0x0018 - 0x0000)
struct FInterpCurveVector2D final
{
public:
	TArray<struct FInterpCurvePointVector2D>      Points;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsLooped;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LoopKeyOffset;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInterpCurveVector2D;

// ScriptStruct CoreUObject.IntPoint
// 0x0008 (0x0008 - 0x0000)
struct FIntPoint final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIntPoint;

// ScriptStruct CoreUObject.IntRect
// 0x0010 (0x0010 - 0x0000)
struct FIntRect final
{
public:
	struct FIntPoint                              min_0;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              max_0;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIntRect;

// ScriptStruct CoreUObject.IntVector
// 0x000C (0x000C - 0x0000)
struct FIntVector final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Z;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIntVector;

// ScriptStruct CoreUObject.IntVector2
// 0x0008 (0x0008 - 0x0000)
struct FIntVector2 final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIntVector2;

// ScriptStruct CoreUObject.IntVector4
// 0x0010 (0x0010 - 0x0000)
struct FIntVector4 final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Z;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         W;                                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIntVector4;

// ScriptStruct CoreUObject.Plane
// 0x0008 (0x0020 - 0x0018)
struct alignas(0x10) FPlane final : public FVector
{
public:
	double                                        W;                                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPlane;

// ScriptStruct CoreUObject.Matrix
// 0x0080 (0x0080 - 0x0000)
struct FMatrix final
{
public:
	struct FPlane                                 XPlane;                                            // 0x0000(0x0020)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlane                                 YPlane;                                            // 0x0020(0x0020)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlane                                 ZPlane;                                            // 0x0040(0x0020)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlane                                 WPlane;                                            // 0x0060(0x0020)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMatrix;

// ScriptStruct CoreUObject.Plane4d
// 0x0008 (0x0020 - 0x0018)
struct alignas(0x10) FPlane4d final : public FVector3d
{
public:
	double                                        W;                                                 // 0x0018(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPlane4d;

// ScriptStruct CoreUObject.Matrix44d
// 0x0080 (0x0080 - 0x0000)
struct FMatrix44d final
{
public:
	struct FPlane4d                               XPlane;                                            // 0x0000(0x0020)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlane4d                               YPlane;                                            // 0x0020(0x0020)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlane4d                               ZPlane;                                            // 0x0040(0x0020)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlane4d                               WPlane;                                            // 0x0060(0x0020)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMatrix44d;

// ScriptStruct CoreUObject.InstancedStructContainer
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FInstancedStructContainer final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInstancedStructContainer;

// ScriptStruct CoreUObject.Plane4f
// 0x0004 (0x0010 - 0x000C)
struct alignas(0x10) FPlane4f final : public FVector3f
{
public:
	float                                         W;                                                 // 0x000C(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPlane4f;

// ScriptStruct CoreUObject.Matrix44f
// 0x0040 (0x0040 - 0x0000)
struct FMatrix44f final
{
public:
	struct FPlane4f                               XPlane;                                            // 0x0000(0x0010)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlane4f                               YPlane;                                            // 0x0010(0x0010)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlane4f                               ZPlane;                                            // 0x0020(0x0010)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlane4f                               WPlane;                                            // 0x0030(0x0010)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMatrix44f;

// ScriptStruct CoreUObject.OrientedBox
// 0x0078 (0x0078 - 0x0000)
struct FOrientedBox final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AxisX;                                             // 0x0018(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AxisY;                                             // 0x0030(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AxisZ;                                             // 0x0048(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ExtentX;                                           // 0x0060(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ExtentY;                                           // 0x0068(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ExtentZ;                                           // 0x0070(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FOrientedBox;

// ScriptStruct CoreUObject.PackedNormal
// 0x0004 (0x0004 - 0x0000)
struct FPackedNormal final
{
public:
	uint8                                         X;                                                 // 0x0000(0x0001)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Y;                                                 // 0x0001(0x0001)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Z;                                                 // 0x0002(0x0001)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         W;                                                 // 0x0003(0x0001)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPackedNormal;

// ScriptStruct CoreUObject.PackedRGB10A2N
// 0x0004 (0x0004 - 0x0000)
struct FPackedRGB10A2N final
{
public:
	int32                                         Packed;                                            // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPackedRGB10A2N;

// ScriptStruct CoreUObject.PackedRGBA16N
// 0x0008 (0x0008 - 0x0000)
struct FPackedRGBA16N final
{
public:
	int32                                         XY;                                                // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ZW;                                                // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPackedRGBA16N;

// ScriptStruct CoreUObject.PlatformUserId
// 0x0004 (0x0004 - 0x0000)
struct FPlatformUserId final
{
public:
	int32                                         InternalId;                                        // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FPlatformUserId;

// ScriptStruct CoreUObject.PlatformInputDeviceState
// 0x0008 (0x0008 - 0x0000)
struct FPlatformInputDeviceState final
{
public:
	struct FPlatformUserId                        OwningPlatformUser;                                // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputDeviceConnectionState                   ConnectionState;                                   // 0x0004(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPlatformInputDeviceState;

// ScriptStruct CoreUObject.PolyglotTextData
// 0x00B0 (0x00B0 - 0x0000)
struct FPolyglotTextData final
{
public:
	ELocalizedTextSourceCategory                  Category;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NativeCulture;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NameSpace;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NativeString;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            LocalizedStrings;                                  // 0x0048(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bIsMinimalPatch;                                   // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CachedText;                                        // 0x00A0(0x0010)(Transient, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPolyglotTextData;

// ScriptStruct CoreUObject.FreezablePerPlatformInt
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FFreezablePerPlatformInt final
{
public:
	uint8                                         Pad_0[0x4];                                        // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFreezablePerPlatformInt;

// ScriptStruct CoreUObject.PrimaryAssetType
// 0x0008 (0x0008 - 0x0000)
struct FPrimaryAssetType final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPrimaryAssetType;

// ScriptStruct CoreUObject.PrimaryAssetId
// 0x0010 (0x0010 - 0x0000)
struct FPrimaryAssetId final
{
public:
	struct FPrimaryAssetType                      PrimaryAssetType;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PrimaryAssetName;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPrimaryAssetId;

// ScriptStruct CoreUObject.QualifiedFrameTime
// 0x0010 (0x0010 - 0x0000)
struct FQualifiedFrameTime final
{
public:
	struct FFrameTime                             Time;                                              // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	struct FFrameRate                             Rate;                                              // 0x0008(0x0008)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQualifiedFrameTime;

// ScriptStruct CoreUObject.Quat4d
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x10) FQuat4d final
{
public:
	double                                        X;                                                 // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Y;                                                 // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Z;                                                 // 0x0010(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        W;                                                 // 0x0018(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQuat4d;

// ScriptStruct CoreUObject.Quat4f
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x10) FQuat4f final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Z;                                                 // 0x0008(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         W;                                                 // 0x000C(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQuat4f;

// ScriptStruct CoreUObject.RandomStream
// 0x0008 (0x0008 - 0x0000)
struct FRandomStream final
{
public:
	int32                                         InitialSeed;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Seed;                                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRandomStream;

// ScriptStruct CoreUObject.Ray
// 0x0030 (0x0030 - 0x0000)
struct FRay final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Direction;                                         // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRay;

// ScriptStruct CoreUObject.Ray3d
// 0x0030 (0x0030 - 0x0000)
struct FRay3d final
{
public:
	struct FVector3d                              Origin;                                            // 0x0000(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector3d                              Direction;                                         // 0x0018(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRay3d;

// ScriptStruct CoreUObject.Ray3f
// 0x0018 (0x0018 - 0x0000)
struct FRay3f final
{
public:
	struct FVector3f                              Origin;                                            // 0x0000(0x000C)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector3f                              Direction;                                         // 0x000C(0x000C)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRay3f;

// ScriptStruct CoreUObject.Rotator
// 0x0018 (0x0018 - 0x0000)
struct FRotator final
{
public:
	using UnderlayingType = double;

	double                                        Pitch;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Yaw;                                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Roll;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static UnderlayingType ClampAxis(UnderlayingType Angle)
	{
		Angle = std::fmod(Angle, static_cast<UnderlayingType>(360));
		if (Angle < static_cast<UnderlayingType>(0))
			Angle += static_cast<UnderlayingType>(360);
	
		return Angle;
	}
	static UnderlayingType NormalizeAxis(UnderlayingType Angle)
	{
		Angle = ClampAxis(Angle);
		if (Angle > static_cast<UnderlayingType>(180))
			Angle -= static_cast<UnderlayingType>(360);
	
		return Angle;
	}

	FRotator& Clamp()
	{
		Pitch = ClampAxis(Pitch);
		Yaw = ClampAxis(Yaw);
		Roll = ClampAxis(Roll);
	
		return *this;
	}
	constexpr FRotator(UnderlayingType Pitch = 0, UnderlayingType Yaw = 0, UnderlayingType Roll = 0)
		: Pitch(Pitch), Yaw(Yaw), Roll(Roll)
	{
	}
	constexpr FRotator(const FRotator& other)
		: Pitch(other.Pitch), Yaw(other.Yaw), Roll(other.Roll)
	{
	}
	FRotator& Normalize()
	{
		Pitch = NormalizeAxis(Pitch);
		Yaw = NormalizeAxis(Yaw);
		Roll = NormalizeAxis(Roll);
	
		return *this;
	}
	FRotator& operator*=(UnderlayingType Scalar)
	{
		*this = *this * Scalar;
	
		return *this;
	}
	FRotator& operator*=(const FRotator& Other)
	{
		*this = *this * Other;
	
		return *this;
	}
	FRotator& operator+=(const FRotator& Other)
	{
		*this = *this + Other;
	
		return *this;
	}
	FRotator& operator-=(const FRotator& Other)
	{
		*this = *this - Other;
	
		return *this;
	}
	FRotator& operator/=(UnderlayingType Scalar)
	{
		*this = *this / Scalar;
	
		return *this;
	}
	FRotator& operator/=(const FRotator& Other)
	{
		*this = *this / Other;
	
		return *this;
	}
	FRotator& operator=(const FRotator& other)
	{
		Pitch = other.Pitch;
		Yaw = other.Yaw;
		Roll = other.Roll;
	
		return *this;
	}

	FRotator GetNormalized() const
	{
		FRotator rotator = *this;
		rotator.Normalize();
	
		return rotator;
	}
	bool IsZero() const
	{
		return ClampAxis(Pitch) == 0 && ClampAxis(Yaw) == 0 && ClampAxis(Roll) == 0;
	}
	bool operator!=(const FRotator& Other) const
	{
		return Pitch != Other.Pitch || Yaw != Other.Yaw || Roll != Other.Roll;
	}
	FRotator operator*(UnderlayingType Scalar) const
	{
		return { Pitch * Scalar, Yaw * Scalar, Roll * Scalar };
	}
	FRotator operator*(const FRotator& Other) const
	{
		return { Pitch * Other.Pitch, Yaw * Other.Yaw, Roll * Other.Roll };
	}
	FRotator operator+(const FRotator& Other) const
	{
		return { Pitch + Other.Pitch, Yaw + Other.Yaw, Roll + Other.Roll };
	}
	FRotator operator-(const FRotator& Other) const
	{
		return { Pitch - Other.Pitch, Yaw - Other.Yaw, Roll - Other.Roll };
	}
	FRotator operator/(UnderlayingType Scalar) const
	{
		if (Scalar == 0)
			return *this;
	
		return { Pitch / Scalar, Yaw / Scalar, Roll / Scalar };
	}
	FRotator operator/(const FRotator& Other) const
	{
		if (Other.Pitch == 0 || Other.Yaw == 0 || Other.Roll == 0)
			return *this;
	
		return { Pitch / Other.Pitch, Yaw / Other.Yaw, Roll / Other.Roll };
	}
	bool operator==(const FRotator& Other) const
	{
		return Pitch == Other.Pitch && Yaw == Other.Yaw && Roll == Other.Roll;
	}
};
DUMPER7_ASSERTS_FRotator;

// ScriptStruct CoreUObject.Rotator3d
// 0x0018 (0x0018 - 0x0000)
struct FRotator3d final
{
public:
	double                                        Pitch;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Yaw;                                               // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Roll;                                              // 0x0010(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRotator3d;

// ScriptStruct CoreUObject.Rotator3f
// 0x000C (0x000C - 0x0000)
struct FRotator3f final
{
public:
	float                                         Pitch;                                             // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Yaw;                                               // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Roll;                                              // 0x0008(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRotator3f;

// ScriptStruct CoreUObject.SoftClassPath
// 0x0000 (0x0020 - 0x0020)
struct FSoftClassPath final : public FSoftObjectPath
{
};
DUMPER7_ASSERTS_FSoftClassPath;

// ScriptStruct CoreUObject.Sphere
// 0x0020 (0x0020 - 0x0000)
struct FSphere final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        W;                                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSphere;

// ScriptStruct CoreUObject.Sphere3d
// 0x0020 (0x0020 - 0x0000)
struct FSphere3d final
{
public:
	struct FVector3d                              Center;                                            // 0x0000(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        W;                                                 // 0x0018(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSphere3d;

// ScriptStruct CoreUObject.Sphere3f
// 0x0010 (0x0010 - 0x0000)
struct FSphere3f final
{
public:
	struct FVector3f                              Center;                                            // 0x0000(0x000C)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         W;                                                 // 0x000C(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSphere3f;

// ScriptStruct CoreUObject.TemplateString
// 0x0010 (0x0010 - 0x0000)
struct FTemplateString final
{
public:
	class FString                                 Template;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTemplateString;

// ScriptStruct CoreUObject.TestUndeclaredScriptStructObjectReferencesTest
// 0x0058 (0x0058 - 0x0000)
struct FTestUndeclaredScriptStructObjectReferencesTest final
{
public:
	class UObject*                                StrongObjectPointer;                               // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                 SoftObjectPointer;                                 // 0x0008(0x0028)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        SoftObjectPath;                                    // 0x0030(0x0020)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                 WeakObjectPointer;                                 // 0x0050(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTestUndeclaredScriptStructObjectReferencesTest;

// ScriptStruct CoreUObject.TestUninitializedScriptStructMembersTest
// 0x0018 (0x0018 - 0x0000)
struct FTestUninitializedScriptStructMembersTest final
{
public:
	class UObject*                                UninitializedObjectReference;                      // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                InitializedObjectReference;                        // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnusedValue;                                       // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTestUninitializedScriptStructMembersTest;

// ScriptStruct CoreUObject.Timecode
// 0x0018 (0x0018 - 0x0000)
struct FTimecode final
{
public:
	int32                                         Hours;                                             // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minutes;                                           // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Seconds;                                           // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Frames;                                            // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SubFrame;                                          // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDropFrameFormat;                                  // 0x0014(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTimecode;

// ScriptStruct CoreUObject.Timespan
// 0x0008 (0x0008 - 0x0000)
struct FTimespan final
{
public:
	int64                                         Ticks;                                             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTimespan;

// ScriptStruct CoreUObject.Transform
// 0x0060 (0x0060 - 0x0000)
struct FTransform final
{
public:
	struct FQuat                                  Rotation;                                          // 0x0000(0x0020)(Edit, BlueprintVisible, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Translation;                                       // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Scale3D;                                           // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTransform;

// ScriptStruct CoreUObject.Transform3d
// 0x0060 (0x0060 - 0x0000)
struct FTransform3d final
{
public:
	struct FQuat4d                                Rotation;                                          // 0x0000(0x0020)(Edit, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector3d                              Translation;                                       // 0x0020(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector3d                              Scale3D;                                           // 0x0040(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTransform3d;

// ScriptStruct CoreUObject.Transform3f
// 0x0030 (0x0030 - 0x0000)
struct FTransform3f final
{
public:
	struct FQuat4f                                Rotation;                                          // 0x0000(0x0010)(Edit, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector3f                              Translation;                                       // 0x0010(0x000C)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector3f                              Scale3D;                                           // 0x0020(0x000C)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTransform3f;

// ScriptStruct CoreUObject.Uint32Point
// 0x0008 (0x0008 - 0x0000)
struct FUint32Point final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUint32Point;

// ScriptStruct CoreUObject.Uint32Rect
// 0x0010 (0x0010 - 0x0000)
struct FUint32Rect final
{
public:
	struct FUint32Point                           min_0;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUint32Point                           max_0;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUint32Rect;

// ScriptStruct CoreUObject.Uint32Vector
// 0x000C (0x000C - 0x0000)
struct FUint32Vector final
{
public:
	uint32                                        X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Z;                                                 // 0x0008(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUint32Vector;

// ScriptStruct CoreUObject.Uint32Vector2
// 0x0008 (0x0008 - 0x0000)
struct FUint32Vector2 final
{
public:
	uint32                                        X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUint32Vector2;

// ScriptStruct CoreUObject.Uint32Vector4
// 0x0010 (0x0010 - 0x0000)
struct FUint32Vector4 final
{
public:
	uint32                                        X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Z;                                                 // 0x0008(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        W;                                                 // 0x000C(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUint32Vector4;

// ScriptStruct CoreUObject.Uint64Point
// 0x0010 (0x0010 - 0x0000)
struct FUint64Point final
{
public:
	int64                                         X;                                                 // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Y;                                                 // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUint64Point;

// ScriptStruct CoreUObject.Uint64Rect
// 0x0020 (0x0020 - 0x0000)
struct FUint64Rect final
{
public:
	struct FUint64Point                           min_0;                                             // 0x0000(0x0010)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUint64Point                           max_0;                                             // 0x0010(0x0010)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUint64Rect;

// ScriptStruct CoreUObject.Uint64Vector
// 0x0018 (0x0018 - 0x0000)
struct FUint64Vector final
{
public:
	uint64                                        X;                                                 // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                        Y;                                                 // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                        Z;                                                 // 0x0010(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUint64Vector;

// ScriptStruct CoreUObject.Uint64Vector2
// 0x0010 (0x0010 - 0x0000)
struct FUint64Vector2 final
{
public:
	uint64                                        X;                                                 // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                        Y;                                                 // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUint64Vector2;

// ScriptStruct CoreUObject.Uint64Vector4
// 0x0020 (0x0020 - 0x0000)
struct FUint64Vector4 final
{
public:
	uint64                                        X;                                                 // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                        Y;                                                 // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                        Z;                                                 // 0x0010(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                        W;                                                 // 0x0018(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUint64Vector4;

// ScriptStruct CoreUObject.UintPoint
// 0x0008 (0x0008 - 0x0000)
struct FUintPoint final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUintPoint;

// ScriptStruct CoreUObject.UintRect
// 0x0010 (0x0010 - 0x0000)
struct FUintRect final
{
public:
	struct FUintPoint                             min_0;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUintPoint                             max_0;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUintRect;

// ScriptStruct CoreUObject.UintVector
// 0x000C (0x000C - 0x0000)
struct FUintVector final
{
public:
	uint32                                        X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Z;                                                 // 0x0008(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUintVector;

// ScriptStruct CoreUObject.UintVector2
// 0x0008 (0x0008 - 0x0000)
struct FUintVector2 final
{
public:
	uint32                                        X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUintVector2;

// ScriptStruct CoreUObject.UintVector4
// 0x0010 (0x0010 - 0x0000)
struct FUintVector4 final
{
public:
	uint32                                        X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Z;                                                 // 0x0008(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        W;                                                 // 0x000C(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUintVector4;

// ScriptStruct CoreUObject.Vector4
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x10) FVector4 final
{
public:
	double                                        X;                                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Y;                                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Z;                                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        W;                                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVector4;

// ScriptStruct CoreUObject.Vector4d
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x10) FVector4d final
{
public:
	double                                        X;                                                 // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Y;                                                 // 0x0008(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Z;                                                 // 0x0010(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        W;                                                 // 0x0018(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVector4d;

// ScriptStruct CoreUObject.Vector4f
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x10) FVector4f final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Z;                                                 // 0x0008(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         W;                                                 // 0x000C(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVector4f;

// ScriptStruct CoreUObject.TestInstanceDataObjectPoint
// 0x0010 (0x0010 - 0x0000)
struct FTestInstanceDataObjectPoint final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Z;                                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         W;                                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTestInstanceDataObjectPoint;

// ScriptStruct CoreUObject.TestInstanceDataObjectPointAlternate
// 0x000C (0x000C - 0x0000)
struct FTestInstanceDataObjectPointAlternate final
{
public:
	int32                                         U;                                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         V;                                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         W;                                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTestInstanceDataObjectPointAlternate;

// ScriptStruct CoreUObject.TestInstanceDataObjectStruct
// 0x0030 (0x0030 - 0x0000)
struct FTestInstanceDataObjectStruct final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         B;                                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         C;                                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         D;                                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectBird                   Bird;                                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectGrain                  Grain;                                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectFruit                  Fruit;                                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	ETestInstanceDataObjectDirection              Direction;                                         // 0x0014(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectFullFlags              FullFlags;                                         // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectGrain                  GrainFromEnumClass;                                // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectFruit                  FruitFromNamespace;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectGrain                  GrainTypeChange;                                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectFruit                  FruitTypeChange;                                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectGrain                  GrainTypeAndPropertyChange;                        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectFruit                  FruitTypeAndPropertyChange;                        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTestInstanceDataObjectPoint           Point;                                             // 0x0020(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTestInstanceDataObjectStruct;

// ScriptStruct CoreUObject.TestInstanceDataObjectStructAlternate
// 0x0038 (0x0038 - 0x0000)
struct FTestInstanceDataObjectStructAlternate final
{
public:
	float                                         B;                                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         C;                                                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         D;                                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         E;                                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectBird                   Bird;                                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectGrainAlternate         Grain;                                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectFruitAlternate         Fruit;                                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	ETestInstanceDataObjectDirectionAlternate     Direction;                                         // 0x001C(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectGrainAlternateEnumClass GrainFromEnumClass;                               // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectFruitAlternateNamespace FruitFromNamespace;                               // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectGrainAlternate         GrainTypeChange;                                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectFruitAlternate         FruitTypeChange;                                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectGrainAlternateEnumClass GrainTypeAndPropertyChange;                       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectFruitAlternateNamespace FruitTypeAndPropertyChange;                       // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectGrainAlternate         DeletedGrain;                                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectFruitAlternate         DeletedFruit;                                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestInstanceDataObjectDirectionAlternate     DeletedDirection;                                  // 0x0026(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTestInstanceDataObjectPointAlternate  Point;                                             // 0x0028(0x000C)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTestInstanceDataObjectStructAlternate;

// ScriptStruct CoreUObject.OverriddenPropertyNodeID
// 0x0010 (0x0010 - 0x0000)
struct FOverriddenPropertyNodeID final
{
public:
	class FName                                   Path;                                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FOverriddenPropertyNodeID;

// ScriptStruct CoreUObject.OverriddenPropertyNode
// 0x0068 (0x0068 - 0x0000)
struct FOverriddenPropertyNode final
{
public:
	struct FOverriddenPropertyNodeID              NodeID;                                            // 0x0000(0x0010)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOverriddenPropertyOperation                  Operation;                                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FOverriddenPropertyNodeID, struct FOverriddenPropertyNodeID> SubPropertyNodeKeys;    // 0x0018(0x0050)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FOverriddenPropertyNode;

// ScriptStruct CoreUObject.OverriddenPropertySet
// 0x0060 (0x0060 - 0x0000)
struct FOverriddenPropertySet final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSet<struct FOverriddenPropertyNode>          OverriddenPropertyNodes;                           // 0x0008(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FOverriddenPropertySet;

// ScriptStruct CoreUObject.PropertyTextFName
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FPropertyTextFName final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPropertyTextFName;

// ScriptStruct CoreUObject.PropertyTextString
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FPropertyTextString final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPropertyTextString;

// ScriptStruct CoreUObject.InstancedStruct
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FInstancedStruct final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInstancedStruct;

// ScriptStruct CoreUObject.PropertyBagPropertyDescMetaData
// 0x0018 (0x0018 - 0x0000)
struct FPropertyBagPropertyDescMetaData final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPropertyBagPropertyDescMetaData;

// ScriptStruct CoreUObject.InstancedPropertyBag
// 0x0010 (0x0010 - 0x0000)
struct FInstancedPropertyBag
{
public:
	struct FInstancedStruct                       Value;                                             // 0x0000(0x0010)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FInstancedPropertyBag;

// ScriptStruct CoreUObject.PropertyBagMissingStruct
// 0x0001 (0x0001 - 0x0000)
struct FPropertyBagMissingStruct final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPropertyBagMissingStruct;

// ScriptStruct CoreUObject.SharedStruct
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FSharedStruct final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSharedStruct;

// ScriptStruct CoreUObject.ObjectCookedMetaDataStore
// 0x0050 (0x0050 - 0x0000)
struct FObjectCookedMetaDataStore final
{
public:
	TMap<class FName, class FString>              ObjectMetaData;                                    // 0x0000(0x0050)(NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FObjectCookedMetaDataStore;

// ScriptStruct CoreUObject.FieldCookedMetaDataStore
// 0x0050 (0x0050 - 0x0000)
struct FFieldCookedMetaDataStore final
{
public:
	TMap<class FName, class FString>              FieldMetaData;                                     // 0x0000(0x0050)(NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FFieldCookedMetaDataStore;

// ScriptStruct CoreUObject.StructCookedMetaDataStore
// 0x00A0 (0x00A0 - 0x0000)
struct FStructCookedMetaDataStore final
{
public:
	struct FObjectCookedMetaDataStore             ObjectMetaData;                                    // 0x0000(0x0050)(NativeAccessSpecifierPrivate)
	TMap<class FName, struct FFieldCookedMetaDataStore> PropertiesMetaData;                          // 0x0050(0x0050)(NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FStructCookedMetaDataStore;

// ScriptStruct CoreUObject.PerPlatformInt
// 0x0004 (0x0004 - 0x0000)
struct FPerPlatformInt final
{
public:
	int32                                         Default;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPerPlatformInt;

// ScriptStruct CoreUObject.PerPlatformBool
// 0x0001 (0x0001 - 0x0000)
struct FPerPlatformBool final
{
public:
	bool                                          Default;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPerPlatformBool;

// ScriptStruct CoreUObject.PerPlatformFrameRate
// 0x0008 (0x0008 - 0x0000)
struct FPerPlatformFrameRate final
{
public:
	struct FFrameRate                             Default;                                           // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPerPlatformFrameRate;

// ScriptStruct CoreUObject.VersePersistentVar
// 0x0030 (0x0030 - 0x0000)
struct FVersePersistentVar final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TFieldPath<class FMapProperty>                Property;                                          // 0x0010(0x0020)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVersePersistentVar;

// ScriptStruct CoreUObject.VerseClassVarAccessor
// 0x0010 (0x0010 - 0x0000)
struct FVerseClassVarAccessor final
{
public:
	class UFunction*                              Func;                                              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInstanceMember;                                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFallible;                                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FVerseClassVarAccessor;

// ScriptStruct CoreUObject.VerseClassVarAccessors
// 0x00A0 (0x00A0 - 0x0000)
struct FVerseClassVarAccessors final
{
public:
	TMap<int32, struct FVerseClassVarAccessor>    Getters;                                           // 0x0000(0x0050)(NativeAccessSpecifierPublic)
	TMap<int32, struct FVerseClassVarAccessor>    Setters;                                           // 0x0050(0x0050)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVerseClassVarAccessors;

}

