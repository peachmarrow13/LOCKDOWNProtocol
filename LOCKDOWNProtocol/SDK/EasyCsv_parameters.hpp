#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyCsv

#include "Basic.hpp"

#include "EasyCsv_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EasyCsv.EasyCsv.ConvertQuatStringToRotator
// 0x0028 (0x0028 - 0x0000)
struct EasyCsv_ConvertQuatStringToRotator final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_ConvertQuatStringToRotator;

// Function EasyCsv.EasyCsv.ConvertQuatStringToRotatorArray
// 0x0020 (0x0020 - 0x0000)
struct EasyCsv_ConvertQuatStringToRotatorArray final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRotator>                       ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_ConvertQuatStringToRotatorArray;

// Function EasyCsv.EasyCsv.ConvertStringToQuat
// 0x0030 (0x0030 - 0x0000)
struct EasyCsv_ConvertStringToQuat final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_ConvertStringToQuat;

// Function EasyCsv.EasyCsv.ConvertStringToQuatArray
// 0x0020 (0x0020 - 0x0000)
struct EasyCsv_ConvertStringToQuatArray final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FQuat>                          ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_ConvertStringToQuatArray;

// Function EasyCsv.EasyCsv.ConvertStringToRotator
// 0x0028 (0x0028 - 0x0000)
struct EasyCsv_ConvertStringToRotator final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_ConvertStringToRotator;

// Function EasyCsv.EasyCsv.ConvertStringToRotatorArray
// 0x0020 (0x0020 - 0x0000)
struct EasyCsv_ConvertStringToRotatorArray final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRotator>                       ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_ConvertStringToRotatorArray;

// Function EasyCsv.EasyCsv.DoesStringRepresentContainer
// 0x0018 (0x0018 - 0x0000)
struct EasyCsv_DoesStringRepresentContainer final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_EasyCsv_DoesStringRepresentContainer;

// Function EasyCsv.EasyCsv.EscapeCharacters
// 0x0020 (0x0020 - 0x0000)
struct EasyCsv_EscapeCharacters final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_EscapeCharacters;

// Function EasyCsv.EasyCsv.GetColumnAsStringArray
// 0x0098 (0x0098 - 0x0000)
struct EasyCsv_GetColumnAsStringArray final
{
public:
	struct FEasyCsvInfo                           CSV_Info;                                          // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ColumnName;                                        // 0x0070(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ReturnValue;                                       // 0x0088(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_GetColumnAsStringArray;

// Function EasyCsv.EasyCsv.GetColumnCount
// 0x0078 (0x0078 - 0x0000)
struct EasyCsv_GetColumnCount final
{
public:
	struct FEasyCsvInfo                           CSV_Info;                                          // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_EasyCsv_GetColumnCount;

// Function EasyCsv.EasyCsv.GetFTextComponentsFromRepresentativeFString
// 0x0040 (0x0040 - 0x0000)
struct EasyCsv_GetFTextComponentsFromRepresentativeFString final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NameSpace;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SourceString;                                      // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_GetFTextComponentsFromRepresentativeFString;

// Function EasyCsv.EasyCsv.GetMapHeaders
// 0x0080 (0x0080 - 0x0000)
struct EasyCsv_GetMapHeaders final
{
public:
	struct FEasyCsvInfo                           CSV_Info;                                          // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0070(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_GetMapHeaders;

// Function EasyCsv.EasyCsv.GetMapKeyIndex
// 0x0080 (0x0080 - 0x0000)
struct EasyCsv_GetMapKeyIndex final
{
public:
	struct FEasyCsvInfo                           CSV_Info;                                          // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FName                                   Key;                                               // 0x0070(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0078(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_EasyCsv_GetMapKeyIndex;

// Function EasyCsv.EasyCsv.GetMapKeys
// 0x0080 (0x0080 - 0x0000)
struct EasyCsv_GetMapKeys final
{
public:
	struct FEasyCsvInfo                           CSV_Info;                                          // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FName>                           ReturnValue;                                       // 0x0070(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_GetMapKeys;

// Function EasyCsv.EasyCsv.GetRowAsStringArray
// 0x0090 (0x0090 - 0x0000)
struct EasyCsv_GetRowAsStringArray final
{
public:
	struct FEasyCsvInfo                           CSV_Info;                                          // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FName                                   RowKey;                                            // 0x0070(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ReturnValue;                                       // 0x0080(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_GetRowAsStringArray;

// Function EasyCsv.EasyCsv.GetRowCount
// 0x0078 (0x0078 - 0x0000)
struct EasyCsv_GetRowCount final
{
public:
	struct FEasyCsvInfo                           CSV_Info;                                          // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_EasyCsv_GetRowCount;

// Function EasyCsv.EasyCsv.GetRowValueAsString
// 0x00A0 (0x00A0 - 0x0000)
struct EasyCsv_GetRowValueAsString final
{
public:
	struct FEasyCsvInfo                           CSV_Info;                                          // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ColumnName;                                        // 0x0070(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RowKey;                                            // 0x0080(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0090(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_GetRowValueAsString;

// Function EasyCsv.EasyCsv.LoadStringFromLocalFile
// 0x0028 (0x0028 - 0x0000)
struct EasyCsv_LoadStringFromLocalFile final
{
public:
	class FString                                 InPath;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutString;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_EasyCsv_LoadStringFromLocalFile;

// Function EasyCsv.EasyCsv.MakeCsvInfoStructFromFile
// 0x0088 (0x0088 - 0x0000)
struct EasyCsv_MakeCsvInfoStructFromFile final
{
public:
	class FString                                 InPath;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEasyCsvInfo                           OutCsvInfo;                                        // 0x0010(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ParseHeaders;                                      // 0x0080(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ParseKeys;                                         // 0x0081(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0082(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_EasyCsv_MakeCsvInfoStructFromFile;

// Function EasyCsv.EasyCsv.MakeCsvInfoStructFromString
// 0x0088 (0x0088 - 0x0000)
struct EasyCsv_MakeCsvInfoStructFromString final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEasyCsvInfo                           OutCsvInfo;                                        // 0x0010(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ParseHeaders;                                      // 0x0080(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ParseKeys;                                         // 0x0081(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0082(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_EasyCsv_MakeCsvInfoStructFromString;

// Function EasyCsv.EasyCsv.ReplaceEscapedCharacters
// 0x0020 (0x0020 - 0x0000)
struct EasyCsv_ReplaceEscapedCharacters final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_EasyCsv_ReplaceEscapedCharacters;

// Function EasyCsv.EasyCsv.SaveStringToFile
// 0x0048 (0x0048 - 0x0000)
struct EasyCsv_SaveStringToFile final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InDirectory;                                       // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Extension;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_EasyCsv_SaveStringToFile;

// Function EasyCsv.EasyCsv.SaveStringToFileWithFullPath
// 0x0028 (0x0028 - 0x0000)
struct EasyCsv_SaveStringToFileWithFullPath final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InFullPath;                                        // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_EasyCsv_SaveStringToFileWithFullPath;

}

