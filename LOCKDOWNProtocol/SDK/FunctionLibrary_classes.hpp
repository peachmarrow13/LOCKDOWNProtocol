#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FunctionLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Enum_SelectedColor_structs.hpp"
#include "E_Difficulty_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FunctionLibrary.FunctionLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void UI_PlayerColor(Enum_SelectedColor Color, float Opacity, class UObject* __WorldContext, struct FLinearColor* Result);
	static void Update_Custom(class USkeletalMeshComponent* Body, class USkeletalMeshComponent* Head, class UStaticMeshComponent* Charm, class UStaticMeshComponent* Ghost, class UStaticMeshComponent* GhostFace, Enum_SelectedColor Color, const struct FStr_SkinCustom_Result& Custom, class UObject* __WorldContext, class FName* Socket);
	static void Rule_Check(class FName Rule, class UObject* __WorldContext);
	static void Get_Rule_Settings(class FName Rule, class UObject* __WorldContext, struct FStr_gamerule* Settings);
	static void Get_Rules_with_Tag(const class FString& Tag, class UObject* __WorldContext, TMap<class FName, int32>* Rules);
	static void Set_Rule(class FName Rule, int32 Value, class UObject* __WorldContext);
	static void Get_Rule(class FName Rule, class UObject* __WorldContext, int32* Value);
	static void Is_Even(int32 Value, class UObject* __WorldContext, bool* Even);
	static void Map_Range__Vector_(const struct FVector& Vector, double In_A, double In_B, double Out_A, double Out_B, double exp, class UObject* __WorldContext, struct FVector* _);
	static void StickHandler(const struct FVector2D& In, double Power, const struct FVector2D& Deadzones, class UObject* __WorldContext, double* Out_X, double* Out_Y, double* Amplitude, bool* Inner, bool* Outter);
	static void Saturate(double _, class UObject* __WorldContext, double* __);
	static void Text_Round(double Value, int32 Fraction, bool Use_Dot, class UObject* __WorldContext, class FString* _);
	static void DeltaValue(double _, class UObject* __WorldContext, double* __);
	static void Map_Range(double Value, double In_A, double In_B, double Out_A, double Out_B, double exp, class UObject* __WorldContext, double* __);
	static void Delta_clamp_(double clamp, class UObject* __WorldContext, double* _);
	static void Power_sign_(double base, double exp, class UObject* __WorldContext, double* Returne_Value);
	static void OneMinus(double _, class UObject* __WorldContext, double* __);
	static void Delta(class UObject* __WorldContext, double* _);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("FunctionLibrary_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FunctionLibrary_C")
	}
	static class UFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFunctionLibrary_C>();
	}
};
DUMPER7_ASSERTS_UFunctionLibrary_C;

}

