#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GM

#include "Basic.hpp"

#include "GM_classes.hpp"
#include "GM_parameters.hpp"


namespace SDK
{

// Function GM.GM_C.Ban Player
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMec_C*                           Mec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGM_C::Ban_Player(class AMec_C* Mec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Ban Player");

	Params::GM_C_Ban_Player Parms{};

	Parms.Mec = Mec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.Check Deaths
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   All_Dead                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_C::Check_Deaths(bool* All_Dead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Check Deaths");

	Params::GM_C_Check_Deaths Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (All_Dead != nullptr)
		*All_Dead = Parms.All_Dead;
}


// Function GM.GM_C.Check Player List
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMec_C*                           New_Mec                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_C::Check_Player_List(class AMec_C* New_Mec, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Check Player List");

	Params::GM_C_Check_Player_List Parms{};

	Parms.New_Mec = New_Mec;

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function GM.GM_C.Check Players Ready
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Ready                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_C::Check_Players_Ready(bool* Ready)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Check Players Ready");

	Params::GM_C_Check_Players_Ready Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ready != nullptr)
		*Ready = Parms.Ready;
}


// Function GM.GM_C.Check Ready
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Check_Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Check Ready");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Death in Lobby
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Death_in_Lobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Death in Lobby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Detonate C4
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Detonate_C4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Detonate C4");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.End Game
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Innocent_Win                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_C::End_Game(bool Innocent_Win, bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "End Game");

	Params::GM_C_End_Game Parms{};

	Parms.Innocent_Win = Innocent_Win;
	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.End on Death
// (BlueprintCallable, BlueprintEvent)

void AGM_C::End_on_Death()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "End on Death");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.ExecuteUbergraph_GM
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_C::ExecuteUbergraph_GM(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "ExecuteUbergraph_GM");

	Params::GM_C_ExecuteUbergraph_GM Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.Game Timer Tick
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Game_Timer_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Game Timer Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Get Valid Players
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class AMec_C*>*                  Players_0                                              (Parm, OutParm)

void AGM_C::Get_Valid_Players(TArray<class AMec_C*>* Players_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Get Valid Players");

	Params::GM_C_Get_Valid_Players Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Players_0 != nullptr)
		*Players_0 = std::move(Parms.Players_0);
}


// Function GM.GM_C.K2_OnLogout
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      ExitingController                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGM_C::K2_OnLogout(class AController* ExitingController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "K2_OnLogout");

	Params::GM_C_K2_OnLogout Parms{};

	Parms.ExitingController = ExitingController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.K2_PostLogin
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGM_C::K2_PostLogin(class APlayerController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "K2_PostLogin");

	Params::GM_C_K2_PostLogin Parms{};

	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.Kick All Players
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Kick_All_Players()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Kick All Players");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.New Player
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMec_C*                           Mec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGM_C::New_Player(class AMec_C* Mec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "New Player");

	Params::GM_C_New_Player Parms{};

	Parms.Mec = Mec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.Quit Player
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Quit_Player()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Quit Player");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AGM_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Resize Player List
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGM_C::Resize_Player_List()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Resize Player List");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Select Game Roles
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Saboters_Count                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_C::Select_Game_Roles(int32 Saboters_Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Select Game Roles");

	Params::GM_C_Select_Game_Roles Parms{};

	Parms.Saboters_Count = Saboters_Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.Select Join Spawn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMec_C*                           Mec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGM_C::Select_Join_Spawn(class AMec_C* Mec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Select Join Spawn");

	Params::GM_C_Select_Join_Spawn Parms{};

	Parms.Mec = Mec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.Select Players Colors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGM_C::Select_Players_Colors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Select Players Colors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Set C4 Ref
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Armed_C4_Ref_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGM_C::Set_C4_Ref(class AActor* Armed_C4_Ref_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Set C4 Ref");

	Params::GM_C_Set_C4_Ref Parms{};

	Parms.Armed_C4_Ref_0 = Armed_C4_Ref_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.Set HackerSphere
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Clear                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_C::Set_HackerSphere(bool Clear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Set HackerSphere");

	Params::GM_C_Set_HackerSphere Parms{};

	Parms.Clear = Clear;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.Set MapSpanwers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGM_C::Set_MapSpanwers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Set MapSpanwers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Set Tutorial Mode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_C::Set_Tutorial_Mode(bool Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Set Tutorial Mode");

	Params::GM_C_Set_Tutorial_Mode Parms{};

	Parms.Start = Start;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.Start Game
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Start_Game()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Start Game");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Start Game Timer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_C::Start_Game_Timer(int32 Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Start Game Timer");

	Params::GM_C_Start_Game_Timer Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.Start Ready Timer
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Start_Ready_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Start Ready Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Start Timer Tick
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Start_Timer_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Start Timer Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Start Tutorial
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Start_Tutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Start Tutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Stop Game Timer
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Stop_Game_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Stop Game Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Stop Ready Timer
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Stop_Ready_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Stop Ready Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Stop Tutorial
// (BlueprintCallable, BlueprintEvent)

void AGM_C::Stop_Tutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Stop Tutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Switch Player Color
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMec_C*                           Mec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// Enum_SelectedColor                      Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_SelectedColor*                     Available_Color                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMec_C**                          Owner_0                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Available                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_C::Switch_Player_Color(class AMec_C* Mec, Enum_SelectedColor Color, Enum_SelectedColor* Available_Color, class AMec_C** Owner_0, bool* Available)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Switch Player Color");

	Params::GM_C_Switch_Player_Color Parms{};

	Parms.Mec = Mec;
	Parms.Color = Color;

	UObject::ProcessEvent(Func, &Parms);

	if (Available_Color != nullptr)
		*Available_Color = Parms.Available_Color;

	if (Owner_0 != nullptr)
		*Owner_0 = Parms.Owner_0;

	if (Available != nullptr)
		*Available = Parms.Available;
}


// Function GM.GM_C.Switch Ready ForPlayer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMec_C*                           Mec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGM_C::Switch_Ready_ForPlayer(class AMec_C* Mec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Switch Ready ForPlayer");

	Params::GM_C_Switch_Ready_ForPlayer Parms{};

	Parms.Mec = Mec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM.GM_C.TP Players on Lobby
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGM_C::TP_Players_on_Lobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "TP Players on Lobby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.TP Players on Start
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGM_C::TP_Players_on_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "TP Players on Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM.GM_C.Update Time
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGM_C::Update_Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_C", "Update Time");

	UObject::ProcessEvent(Func, nullptr);
}

}

