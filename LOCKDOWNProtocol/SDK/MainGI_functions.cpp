#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainGI

#include "Basic.hpp"

#include "MainGI_classes.hpp"
#include "MainGI_parameters.hpp"


namespace SDK
{

// Function MainGI.MainGI_C.Add to Banlist
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SteamID                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)

void UMainGI_C::Add_to_Banlist(const class FString& SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Add to Banlist");

	Params::MainGI_C_Add_to_Banlist Parms{};

	Parms.SteamID = std::move(SteamID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.Banlist Datas
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRuntimeDataTableCallbackInfo&CallbackInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UMainGI_C::Banlist_Datas(const struct FRuntimeDataTableCallbackInfo& CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Banlist Datas");

	Params::MainGI_C_Banlist_Datas Parms{};

	Parms.CallbackInfo = std::move(CallbackInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.Check Server Datas
// (BlueprintCallable, BlueprintEvent)

void UMainGI_C::Check_Server_Datas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Check Server Datas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.Clean Banlist
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMainGI_C::Clean_Banlist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Clean Banlist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.Container Add Mesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMainGI_C::Container_Add_Mesh(class UMeshComponent* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Container Add Mesh");

	Params::MainGI_C_Container_Add_Mesh Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.Create Session
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    SessionPassword                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// E_SessionVisilibity                     Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainGI_C::Create_Session(const class FString& SessionName, const class FString& SessionPassword, E_SessionVisilibity Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Create Session");

	Params::MainGI_C_Create_Session Parms{};

	Parms.SessionName = std::move(SessionName);
	Parms.SessionPassword = std::move(SessionPassword);
	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.Datas Found
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRuntimeDataTableCallbackInfo&CallbackInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UMainGI_C::Datas_Found(const struct FRuntimeDataTableCallbackInfo& CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Datas Found");

	Params::MainGI_C_Datas_Found Parms{};

	Parms.CallbackInfo = std::move(CallbackInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.Destroy Session
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainGI_C::Destroy_Session(bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Destroy Session");

	Params::MainGI_C_Destroy_Session Parms{};

	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.ExecuteUbergraph_MainGI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainGI_C::ExecuteUbergraph_MainGI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "ExecuteUbergraph_MainGI");

	Params::MainGI_C_ExecuteUbergraph_MainGI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.Generate FilesCode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, int64>*             Files                                                  (Parm, OutParm)
// class FString*                          Code                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UMainGI_C::Generate_FilesCode(TMap<class FString, int64>* Files, class FString* Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Generate FilesCode");

	Params::MainGI_C_Generate_FilesCode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Files != nullptr)
		*Files = std::move(Parms.Files);

	if (Code != nullptr)
		*Code = std::move(Parms.Code);
}


// Function MainGI.MainGI_C.Get Banlist
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FString>*                  Banlist                                                (Parm, OutParm)

void UMainGI_C::Get_Banlist(TArray<class FString>* Banlist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Get Banlist");

	Params::MainGI_C_Get_Banlist Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Banlist != nullptr)
		*Banlist = std::move(Parms.Banlist);
}


// Function MainGI.MainGI_C.Get Dev Banlist
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FString>*                  Banlist                                                (Parm, OutParm)

void UMainGI_C::Get_Dev_Banlist(TArray<class FString>* Banlist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Get Dev Banlist");

	Params::MainGI_C_Get_Dev_Banlist Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Banlist != nullptr)
		*Banlist = std::move(Parms.Banlist);
}


// Function MainGI.MainGI_C.HandleNetworkError
// (Event, Public, BlueprintEvent)
// Parameters:
// ENetworkFailure                         FailureType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsServer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainGI_C::HandleNetworkError(ENetworkFailure FailureType, bool bIsServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "HandleNetworkError");

	Params::MainGI_C_HandleNetworkError Parms{};

	Parms.FailureType = FailureType;
	Parms.bIsServer = bIsServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.HandleTravelError
// (Event, Public, BlueprintEvent)
// Parameters:
// ETravelFailure                          FailureType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainGI_C::HandleTravelError(ETravelFailure FailureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "HandleTravelError");

	Params::MainGI_C_HandleTravelError Parms{};

	Parms.FailureType = FailureType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.Invite Accepted
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LocalPlayerNum                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    InvitedBy                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const struct FBlueprintSessionResult&   Session                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UMainGI_C::Invite_Accepted(bool bWasSuccessful, int32 LocalPlayerNum, const class FString& InvitedBy, const struct FBlueprintSessionResult& Session)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Invite Accepted");

	Params::MainGI_C_Invite_Accepted Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.LocalPlayerNum = LocalPlayerNum;
	Parms.InvitedBy = std::move(InvitedBy);
	Parms.Session = std::move(Session);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.Join Session
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBlueprintSessionResult&   Session                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UMainGI_C::Join_Session(const struct FBlueprintSessionResult& Session)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Join Session");

	Params::MainGI_C_Join_Session Parms{};

	Parms.Session = std::move(Session);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.OnCallback_53ADE5D94292283D8FA72FB38DFF9184
// (BlueprintCallable, BlueprintEvent)

void UMainGI_C::OnCallback_53ADE5D94292283D8FA72FB38DFF9184()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "OnCallback_53ADE5D94292283D8FA72FB38DFF9184");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.OnFailure_321D833F47F49FB1E4BFB79F35CBFDD3
// (BlueprintCallable, BlueprintEvent)

void UMainGI_C::OnFailure_321D833F47F49FB1E4BFB79F35CBFDD3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "OnFailure_321D833F47F49FB1E4BFB79F35CBFDD3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.OnFailure_4C9FFA1C4AB73436DE74C8826D52BB4E
// (BlueprintCallable, BlueprintEvent)

void UMainGI_C::OnFailure_4C9FFA1C4AB73436DE74C8826D52BB4E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "OnFailure_4C9FFA1C4AB73436DE74C8826D52BB4E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.OnFailure_728662F4405B257744D5C795EE667A95
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    JoinFailReason                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UMainGI_C::OnFailure_728662F4405B257744D5C795EE667A95(const class FString& JoinFailReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "OnFailure_728662F4405B257744D5C795EE667A95");

	Params::MainGI_C_OnFailure_728662F4405B257744D5C795EE667A95 Parms{};

	Parms.JoinFailReason = std::move(JoinFailReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.OnFailure_E11D28F341407BAAA92E07BF0B670CE0
// (BlueprintCallable, BlueprintEvent)

void UMainGI_C::OnFailure_E11D28F341407BAAA92E07BF0B670CE0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "OnFailure_E11D28F341407BAAA92E07BF0B670CE0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.OnSuccess_321D833F47F49FB1E4BFB79F35CBFDD3
// (BlueprintCallable, BlueprintEvent)

void UMainGI_C::OnSuccess_321D833F47F49FB1E4BFB79F35CBFDD3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "OnSuccess_321D833F47F49FB1E4BFB79F35CBFDD3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.OnSuccess_4C9FFA1C4AB73436DE74C8826D52BB4E
// (BlueprintCallable, BlueprintEvent)

void UMainGI_C::OnSuccess_4C9FFA1C4AB73436DE74C8826D52BB4E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "OnSuccess_4C9FFA1C4AB73436DE74C8826D52BB4E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.OnSuccess_728662F4405B257744D5C795EE667A95
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    JoinFailReason                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UMainGI_C::OnSuccess_728662F4405B257744D5C795EE667A95(const class FString& JoinFailReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "OnSuccess_728662F4405B257744D5C795EE667A95");

	Params::MainGI_C_OnSuccess_728662F4405B257744D5C795EE667A95 Parms{};

	Parms.JoinFailReason = std::move(JoinFailReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.OnSuccess_E11D28F341407BAAA92E07BF0B670CE0
// (BlueprintCallable, BlueprintEvent)

void UMainGI_C::OnSuccess_E11D28F341407BAAA92E07BF0B670CE0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "OnSuccess_E11D28F341407BAAA92E07BF0B670CE0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.Outpu Device name
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    CurrentDevice                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UMainGI_C::Outpu_Device_name(const class FString& CurrentDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Outpu Device name");

	Params::MainGI_C_Outpu_Device_name Parms{};

	Parms.CurrentDevice = std::move(CurrentDevice);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.Play Sound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Pitch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainGI_C::Play_Sound(class USoundBase* Sound, float Volume, float Pitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Play Sound");

	Params::MainGI_C_Play_Sound Parms{};

	Parms.Sound = Sound;
	Parms.Volume = Volume;
	Parms.Pitch = Pitch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.ReceiveInit
// (Event, Public, BlueprintEvent)

void UMainGI_C::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "ReceiveInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.ReceiveShutdown
// (Event, Public, BlueprintEvent)

void UMainGI_C::ReceiveShutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "ReceiveShutdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.Remove from Banlist
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SteamID                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainGI_C::Remove_from_Banlist(const class FString& SteamID, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Remove from Banlist");

	Params::MainGI_C_Remove_from_Banlist Parms{};

	Parms.SteamID = std::move(SteamID);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function MainGI.MainGI_C.Set Language
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UMainGI_C::Set_Language(const class FString& Culture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Set Language");

	Params::MainGI_C_Set_Language Parms{};

	Parms.Culture = std::move(Culture);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.Set ScreenMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_LoadMessage                           ScreenMessage_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainGI_C::Set_ScreenMessage(E_LoadMessage ScreenMessage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Set ScreenMessage");

	Params::MainGI_C_Set_ScreenMessage Parms{};

	Parms.ScreenMessage_0 = ScreenMessage_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainGI.MainGI_C.Start Screen
// (BlueprintCallable, BlueprintEvent)

void UMainGI_C::Start_Screen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Start Screen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.Update Dev Banlist
// (BlueprintCallable, BlueprintEvent)

void UMainGI_C::Update_Dev_Banlist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Update Dev Banlist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.Update Player List
// (BlueprintCallable, BlueprintEvent)

void UMainGI_C::Update_Player_List()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Update Player List");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainGI.MainGI_C.Update Session
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   MaxPlayers                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainGI_C::Update_Session(const class FString& SessionName, int32 MaxPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainGI_C", "Update Session");

	Params::MainGI_C_Update_Session Parms{};

	Parms.SessionName = std::move(SessionName);
	Parms.MaxPlayers = MaxPlayers;

	UObject::ProcessEvent(Func, &Parms);
}

}

