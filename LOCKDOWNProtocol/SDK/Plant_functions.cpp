#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Plant

#include "Basic.hpp"

#include "Plant_classes.hpp"
#include "Plant_parameters.hpp"


namespace SDK
{

// Function Plant.Plant_C.All Trigger
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMec_C*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlant_C::All_Trigger(class AMec_C* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "All Trigger");

	Params::Plant_C_All_Trigger Parms{};

	Parms.Source = Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.All Update Type
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Type_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlant_C::All_Update_Type(bool Lock, int32 Type_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "All Update Type");

	Params::Plant_C_All_Update_Type Parms{};

	Parms.Lock = Lock;
	Parms.Type_0 = Type_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_0_Local Trigger__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AMec_C*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlant_C::BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature(class AMec_C* Source, const struct FStr_ItemState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_0_Local Trigger__DelegateSignature");

	Params::Plant_C_BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature Parms{};

	Parms.Source = Source;
	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_1_Focus__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    TRUE_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlant_C::BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_1_Focus__DelegateSignature(bool TRUE_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_1_Focus__DelegateSignature");

	Params::Plant_C_BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_1_Focus__DelegateSignature Parms{};

	Parms.TRUE_0 = TRUE_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_2_Focusable__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    TRUE_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlant_C::BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_2_Focusable__DelegateSignature(bool TRUE_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_2_Focusable__DelegateSignature");

	Params::Plant_C_BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_2_Focusable__DelegateSignature Parms{};

	Parms.TRUE_0 = TRUE_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_3_Net Trigger__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AMec_C*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlant_C::BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_3_Net_Trigger__DelegateSignature(class AMec_C* Source, const struct FStr_ItemState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_3_Net Trigger__DelegateSignature");

	Params::Plant_C_BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_3_Net_Trigger__DelegateSignature Parms{};

	Parms.Source = Source;
	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.ExecuteUbergraph_Plant
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlant_C::ExecuteUbergraph_Plant(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "ExecuteUbergraph_Plant");

	Params::Plant_C_ExecuteUbergraph_Plant Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.Get Key
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          Key                                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlant_C::Get_Key(class AActor** Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "Get Key");

	Params::Plant_C_Get_Key Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Key != nullptr)
		*Key = Parms.Key;
}


// Function Plant.Plant_C.Get Name
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMec_C*                           Mec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString*                          Name_0                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void APlant_C::Get_Name(class AMec_C* Mec, class FString* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "Get Name");

	Params::Plant_C_Get_Name Parms{};

	Parms.Mec = Mec;

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function Plant.Plant_C.Local Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlant_C::Local_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "Local Interaction");

	Params::Plant_C_Local_Interaction Parms{};

	Parms.Index_0 = Index_0;
	Parms.Source = Source;
	Parms.Item_State = std::move(Item_State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.Lock Plant
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlant_C::Lock_Plant(bool Lock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "Lock Plant");

	Params::Plant_C_Lock_Plant Parms{};

	Parms.Lock = Lock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.Net Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlant_C::Net_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "Net Interaction");

	Params::Plant_C_Net_Interaction Parms{};

	Parms.Index_0 = Index_0;
	Parms.Source = Source;
	Parms.Item_State = std::move(Item_State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.OnRep_Fake
// (BlueprintCallable, BlueprintEvent)

void APlant_C::OnRep_Fake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "OnRep_Fake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Plant.Plant_C.OnRep_Type
// (BlueprintCallable, BlueprintEvent)

void APlant_C::OnRep_Type()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "OnRep_Type");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Plant.Plant_C.Other Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlant_C::Other_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "Other Interaction");

	Params::Plant_C_Other_Interaction Parms{};

	Parms.Index_0 = Index_0;
	Parms.Source = Source;
	Parms.Item_State = std::move(Item_State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APlant_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Plant.Plant_C.Request Update
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlant_C::Request_Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "Request Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Plant.Plant_C.Set Type
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Type_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Fake_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlant_C::Set_Type(int32 Type_0, bool Fake_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "Set Type");

	Params::Plant_C_Set_Type Parms{};

	Parms.Type_0 = Type_0;
	Parms.Fake_0 = Fake_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Plant.Plant_C.Update Type
// (Public, BlueprintCallable, BlueprintEvent)

void APlant_C::Update_Type()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "Update Type");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Plant.Plant_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APlant_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Plant_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

