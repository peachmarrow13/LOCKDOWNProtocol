#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Scanner_Screen

#include "Basic.hpp"

#include "Scanner_Screen_classes.hpp"
#include "Scanner_Screen_parameters.hpp"


namespace SDK
{

// Function Scanner_Screen.Scanner_Screen_C.All Clear
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AScanner_Screen_C::All_Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "All Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scanner_Screen.Scanner_Screen_C.All Process
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>&                          Targets_Process_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AScanner_Screen_C::All_Process(TArray<int32>& Targets_Process_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "All Process");

	Params::Scanner_Screen_C_All_Process Parms{};

	Parms.Targets_Process_0 = std::move(Targets_Process_0);

	UObject::ProcessEvent(Func, &Parms);

	Targets_Process_0 = std::move(Parms.Targets_Process_0);
}


// Function Scanner_Screen.Scanner_Screen_C.All Set Rotation Target
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  MainRotation_Target_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AScanner_Screen_C::All_Set_Rotation_Target(const struct FRotator& MainRotation_Target_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "All Set Rotation Target");

	Params::Scanner_Screen_C_All_Set_Rotation_Target Parms{};

	Parms.MainRotation_Target_0 = std::move(MainRotation_Target_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scanner_Screen.Scanner_Screen_C.All Set Targets
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStr_ScannerDot>&         Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AScanner_Screen_C::All_Set_Targets(TArray<struct FStr_ScannerDot>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "All Set Targets");

	Params::Scanner_Screen_C_All_Set_Targets Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function Scanner_Screen.Scanner_Screen_C.All Sound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AScanner_Screen_C::All_Sound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "All Sound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scanner_Screen.Scanner_Screen_C.Clear
// (BlueprintCallable, BlueprintEvent)

void AScanner_Screen_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scanner_Screen.Scanner_Screen_C.ExecuteUbergraph_Scanner_Screen
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AScanner_Screen_C::ExecuteUbergraph_Scanner_Screen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "ExecuteUbergraph_Scanner_Screen");

	Params::Scanner_Screen_C_ExecuteUbergraph_Scanner_Screen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scanner_Screen.Scanner_Screen_C.Get Key
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          Key                                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AScanner_Screen_C::Get_Key(class AActor** Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "Get Key");

	Params::Scanner_Screen_C_Get_Key Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Key != nullptr)
		*Key = Parms.Key;
}


// Function Scanner_Screen.Scanner_Screen_C.Get Name
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMec_C*                           Mec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString*                          Name_0                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AScanner_Screen_C::Get_Name(class AMec_C* Mec, class FString* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "Get Name");

	Params::Scanner_Screen_C_Get_Name Parms{};

	Parms.Mec = Mec;

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function Scanner_Screen.Scanner_Screen_C.Local Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AScanner_Screen_C::Local_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "Local Interaction");

	Params::Scanner_Screen_C_Local_Interaction Parms{};

	Parms.Index_0 = Index_0;
	Parms.Source = Source;
	Parms.Item_State = std::move(Item_State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scanner_Screen.Scanner_Screen_C.Net Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AScanner_Screen_C::Net_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "Net Interaction");

	Params::Scanner_Screen_C_Net_Interaction Parms{};

	Parms.Index_0 = Index_0;
	Parms.Source = Source;
	Parms.Item_State = std::move(Item_State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scanner_Screen.Scanner_Screen_C.New Targets
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Dots_Count                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AScanner_Screen_C::New_Targets(int32 Dots_Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "New Targets");

	Params::Scanner_Screen_C_New_Targets Parms{};

	Parms.Dots_Count = Dots_Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scanner_Screen.Scanner_Screen_C.NewFunction
// (Public, BlueprintCallable, BlueprintEvent)

void AScanner_Screen_C::NewFunction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "NewFunction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scanner_Screen.Scanner_Screen_C.Other Interaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FStr_ItemState&            Item_State                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AScanner_Screen_C::Other_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "Other Interaction");

	Params::Scanner_Screen_C_Other_Interaction Parms{};

	Parms.Index_0 = Index_0;
	Parms.Source = Source;
	Parms.Item_State = std::move(Item_State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scanner_Screen.Scanner_Screen_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AScanner_Screen_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scanner_Screen.Scanner_Screen_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AScanner_Screen_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "ReceiveTick");

	Params::Scanner_Screen_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scanner_Screen.Scanner_Screen_C.Set Screen Info
// (Public, BlueprintCallable, BlueprintEvent)

void AScanner_Screen_C::Set_Screen_Info()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "Set Screen Info");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scanner_Screen.Scanner_Screen_C.Timeline__FinishedFunc
// (BlueprintEvent)

void AScanner_Screen_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scanner_Screen.Scanner_Screen_C.Timeline__UpdateFunc
// (BlueprintEvent)

void AScanner_Screen_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scanner_Screen.Scanner_Screen_C.Timer Counts
// (BlueprintCallable, BlueprintEvent)

void AScanner_Screen_C::Timer_Counts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "Timer Counts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scanner_Screen.Scanner_Screen_C.Update Rotation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AScanner_Screen_C::Update_Rotation(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "Update Rotation");

	Params::Scanner_Screen_C_Update_Rotation Parms{};

	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scanner_Screen.Scanner_Screen_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AScanner_Screen_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scanner_Screen_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

