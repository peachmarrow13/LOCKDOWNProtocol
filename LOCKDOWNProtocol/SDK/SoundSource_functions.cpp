#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SoundSource

#include "Basic.hpp"

#include "SoundSource_classes.hpp"
#include "SoundSource_parameters.hpp"


namespace SDK
{

// Function SoundSource.SoundSource_C.Stop
// (Public, BlueprintCallable, BlueprintEvent)

void ASoundSource_C::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoundSource.SoundSource_C.Set Effect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundEffectSourcePresetChain*    Effect_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ASoundSource_C::Set_Effect(class USoundEffectSourcePresetChain* Effect_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Set Effect");

	Params::SoundSource_C_Set_Effect Parms{};

	Parms.Effect_0 = Effect_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Set Path Level
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_PathLevel                          Path_Level_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::Set_Path_Level(Enum_PathLevel Path_Level_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Set Path Level");

	Params::SoundSource_C_Set_Path_Level Parms{};

	Parms.Path_Level_0 = Path_Level_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Trigger2
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TRUE_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::Trigger2(class FName Name_0, bool TRUE_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Trigger2");

	Params::SoundSource_C_Trigger2 Parms{};

	Parms.Name_0 = Name_0;
	Parms.TRUE_0 = TRUE_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Play Impact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Volume_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Pitch_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundWave*                       Wave                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::Play_Impact(float Volume_0, float Pitch_0, class USoundWave* Wave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Play Impact");

	Params::SoundSource_C_Play_Impact Parms{};

	Parms.Volume_0 = Volume_0;
	Parms.Pitch_0 = Pitch_0;
	Parms.Wave = Wave;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Play
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::Play(float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Play");

	Params::SoundSource_C_Play Parms{};

	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Set Sound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::Set_Sound(class USoundBase* Sound_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Set Sound");

	Params::SoundSource_C_Set_Sound Parms{};

	Parms.Sound_0 = Sound_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Set Attenuation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundAttenuation*                Attenuation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ASoundSource_C::Set_Attenuation(class USoundAttenuation* Attenuation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Set Attenuation");

	Params::SoundSource_C_Set_Attenuation Parms{};

	Parms.Attenuation_0 = Attenuation_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Trigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::Trigger(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Trigger");

	Params::SoundSource_C_Trigger Parms{};

	Parms.Name_0 = Name_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Set Volume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Volume_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::Set_Volume(float Volume_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Set Volume");

	Params::SoundSource_C_Set_Volume Parms{};

	Parms.Volume_0 = Volume_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Set Pitch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Pitch_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::Set_Pitch(float Pitch_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Set Pitch");

	Params::SoundSource_C_Set_Pitch Parms{};

	Parms.Pitch_0 = Pitch_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Set Float
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::Set_Float(class FName Input, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Set Float");

	Params::SoundSource_C_Set_Float Parms{};

	Parms.Input = Input;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ASoundSource_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoundSource.SoundSource_C.TL Shut Sound__FinishedFunc
// (BlueprintEvent)

void ASoundSource_C::TL_Shut_Sound__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "TL Shut Sound__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoundSource.SoundSource_C.TL Shut Sound__UpdateFunc
// (BlueprintEvent)

void ASoundSource_C::TL_Shut_Sound__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "TL Shut Sound__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoundSource.SoundSource_C.TL Rise Sound__FinishedFunc
// (BlueprintEvent)

void ASoundSource_C::TL_Rise_Sound__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "TL Rise Sound__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoundSource.SoundSource_C.TL Rise Sound__UpdateFunc
// (BlueprintEvent)

void ASoundSource_C::TL_Rise_Sound__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "TL Rise Sound__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoundSource.SoundSource_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ASoundSource_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoundSource.SoundSource_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "ReceiveTick");

	Params::SoundSource_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Activate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TRUE_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::Activate(bool TRUE_0, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Activate");

	Params::SoundSource_C_Activate Parms{};

	Parms.TRUE_0 = TRUE_0;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Force Active
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TRUE_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::Force_Active(bool TRUE_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Force Active");

	Params::SoundSource_C_Force_Active Parms{};

	Parms.TRUE_0 = TRUE_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.Restart
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASoundSource_C::Restart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "Restart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoundSource.SoundSource_C.BndEvt__SoundSource_MetaSound_K2Node_ComponentBoundEvent_0_OnAudioVirtualizationChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bIsVirtualized                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::BndEvt__SoundSource_MetaSound_K2Node_ComponentBoundEvent_0_OnAudioVirtualizationChanged__DelegateSignature(bool bIsVirtualized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "BndEvt__SoundSource_MetaSound_K2Node_ComponentBoundEvent_0_OnAudioVirtualizationChanged__DelegateSignature");

	Params::SoundSource_C_BndEvt__SoundSource_MetaSound_K2Node_ComponentBoundEvent_0_OnAudioVirtualizationChanged__DelegateSignature Parms{};

	Parms.bIsVirtualized = bIsVirtualized;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoundSource.SoundSource_C.ExecuteUbergraph_SoundSource
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoundSource_C::ExecuteUbergraph_SoundSource(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoundSource_C", "ExecuteUbergraph_SoundSource");

	Params::SoundSource_C_ExecuteUbergraph_SoundSource Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

