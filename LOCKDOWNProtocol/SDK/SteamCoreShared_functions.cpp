#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SteamCoreShared

#include "Basic.hpp"

#include "SteamCoreShared_classes.hpp"
#include "SteamCoreShared_parameters.hpp"


namespace SDK
{

// Function SteamCoreShared.SteamCoreAudioCaptureBlueprintLibrary.Conv_AudioInputDeviceInfoToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FSteamCoreAudioInputDeviceInfo&Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USteamCoreAudioCaptureBlueprintLibrary::Conv_AudioInputDeviceInfoToString(const struct FSteamCoreAudioInputDeviceInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamCoreAudioCaptureBlueprintLibrary", "Conv_AudioInputDeviceInfoToString");

	Params::SteamCoreAudioCaptureBlueprintLibrary_Conv_AudioInputDeviceInfoToString Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamCoreShared.SteamCoreAudioCaptureBlueprintLibrary.GetAvailableAudioInputDevices
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(const TArray<struct FSteamCoreAudioInputDeviceInfo>& AvailableDevices)>&OnObtainDevicesEvent                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USteamCoreAudioCaptureBlueprintLibrary::GetAvailableAudioInputDevices(const class UObject* WorldContextObject, const TDelegate<void(const TArray<struct FSteamCoreAudioInputDeviceInfo>& AvailableDevices)>& OnObtainDevicesEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamCoreAudioCaptureBlueprintLibrary", "GetAvailableAudioInputDevices");

	Params::SteamCoreAudioCaptureBlueprintLibrary_GetAvailableAudioInputDevices Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OnObtainDevicesEvent = OnObtainDevicesEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SteamCoreShared.SteamCoreSharedAudioSubsystem.K2_FindAudioDeviceInfoFromDeviceId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    DeviceID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSteamCoreAudioInputDeviceInfo   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSteamCoreAudioInputDeviceInfo USteamCoreSharedAudioSubsystem::K2_FindAudioDeviceInfoFromDeviceId(const class FString& DeviceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamCoreSharedAudioSubsystem", "K2_FindAudioDeviceInfoFromDeviceId");

	Params::SteamCoreSharedAudioSubsystem_K2_FindAudioDeviceInfoFromDeviceId Parms{};

	Parms.DeviceID = std::move(DeviceID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamCoreShared.SteamCoreSharedAudioSubsystem.K2_FindAudioDeviceInfoFromDeviceName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    DeviceName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSteamCoreAudioInputDeviceInfo   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSteamCoreAudioInputDeviceInfo USteamCoreSharedAudioSubsystem::K2_FindAudioDeviceInfoFromDeviceName(const class FString& DeviceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamCoreSharedAudioSubsystem", "K2_FindAudioDeviceInfoFromDeviceName");

	Params::SteamCoreSharedAudioSubsystem_K2_FindAudioDeviceInfoFromDeviceName Parms{};

	Parms.DeviceName = std::move(DeviceName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamCoreShared.SteamCoreSharedAudioSubsystem.K2_GetAudioInputDevices
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<struct FSteamCoreAudioInputDeviceInfo>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FSteamCoreAudioInputDeviceInfo> USteamCoreSharedAudioSubsystem::K2_GetAudioInputDevices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamCoreSharedAudioSubsystem", "K2_GetAudioInputDevices");

	Params::SteamCoreSharedAudioSubsystem_K2_GetAudioInputDevices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

