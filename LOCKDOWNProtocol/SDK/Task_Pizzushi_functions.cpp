#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Pizzushi

#include "Basic.hpp"

#include "Task_Pizzushi_classes.hpp"
#include "Task_Pizzushi_parameters.hpp"


namespace SDK
{

// Function Task_Pizzushi.Task_Pizzushi_C.Check Tables
// (BlueprintCallable, BlueprintEvent)

void ATask_Pizzushi_C::Check_Tables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Pizzushi_C", "Check Tables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Pizzushi.Task_Pizzushi_C.Check Tables Finish
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Finish                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Count_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATask_Pizzushi_C::Check_Tables_Finish(bool* Finish, int32* Count_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Pizzushi_C", "Check Tables Finish");

	Params::Task_Pizzushi_C_Check_Tables_Finish Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Finish != nullptr)
		*Finish = Parms.Finish;

	if (Count_0 != nullptr)
		*Count_0 = Parms.Count_0;
}


// Function Task_Pizzushi.Task_Pizzushi_C.Clear
// (BlueprintCallable, BlueprintEvent)

void ATask_Pizzushi_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Pizzushi_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Pizzushi.Task_Pizzushi_C.ExecuteUbergraph_Task_Pizzushi
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATask_Pizzushi_C::ExecuteUbergraph_Task_Pizzushi(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Pizzushi_C", "ExecuteUbergraph_Task_Pizzushi");

	Params::Task_Pizzushi_C_ExecuteUbergraph_Task_Pizzushi Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Pizzushi.Task_Pizzushi_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ATask_Pizzushi_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Pizzushi_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Pizzushi.Task_Pizzushi_C.Select Tables
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class APizzushi_Table_C*>*       Task_Tables_0                                          (Parm, OutParm)

void ATask_Pizzushi_C::Select_Tables(int32 Count_0, TArray<class APizzushi_Table_C*>* Task_Tables_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Pizzushi_C", "Select Tables");

	Params::Task_Pizzushi_C_Select_Tables Parms{};

	Parms.Count_0 = Count_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Task_Tables_0 != nullptr)
		*Task_Tables_0 = std::move(Parms.Task_Tables_0);
}


// Function Task_Pizzushi.Task_Pizzushi_C.Start Task
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATask_Pizzushi_C::Start_Task(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Pizzushi_C", "Start Task");

	Params::Task_Pizzushi_C_Start_Task Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}

}

