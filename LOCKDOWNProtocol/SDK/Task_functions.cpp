#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task

#include "Basic.hpp"

#include "Task_classes.hpp"
#include "Task_parameters.hpp"


namespace SDK
{

// Function Task.Task_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ATask_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task.Task_C.Start Task
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATask_C::Start_Task(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_C", "Start Task");

	Params::Task_C_Start_Task Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task.Task_C.ExecuteUbergraph_Task
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATask_C::ExecuteUbergraph_Task(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_C", "ExecuteUbergraph_Task");

	Params::Task_C_ExecuteUbergraph_Task Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task.Task_C.Get Task Rule
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATask_C::Get_Task_Rule(int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_C", "Get Task Rule");

	Params::Task_C_Get_Task_Rule Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function Task.Task_C.Finito
// (BlueprintCallable, BlueprintEvent)

void ATask_C::Finito()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_C", "Finito");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task.Task_C.Clear
// (BlueprintCallable, BlueprintEvent)

void ATask_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task.Task_C.All Check Task
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATask_C::All_Check_Task()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_C", "All Check Task");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task.Task_C.All Update Count
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATask_C::All_Update_Count(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_C", "All Update Count");

	Params::Task_C_All_Update_Count Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task.Task_C.Update
// (BlueprintCallable, BlueprintEvent)

void ATask_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}

}

