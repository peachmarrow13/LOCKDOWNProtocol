#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tutorial_Screen

#include "Basic.hpp"

#include "Tutorial_Screen_classes.hpp"
#include "Tutorial_Screen_parameters.hpp"


namespace SDK
{

// Function Tutorial_Screen.Tutorial_Screen_C.ExecuteUbergraph_Tutorial_Screen
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATutorial_Screen_C::ExecuteUbergraph_Tutorial_Screen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Screen_C", "ExecuteUbergraph_Tutorial_Screen");

	Params::Tutorial_Screen_C_ExecuteUbergraph_Tutorial_Screen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Screen.Tutorial_Screen_C.Move in Video
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Foward                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATutorial_Screen_C::Move_in_Video(bool Foward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Screen_C", "Move in Video");

	Params::Tutorial_Screen_C_Move_in_Video Parms{};

	Parms.Foward = Foward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Screen.Tutorial_Screen_C.Pause Video
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTimespan&                 Time                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ATutorial_Screen_C::Pause_Video(const struct FTimespan& Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Screen_C", "Pause Video");

	Params::Tutorial_Screen_C_Pause_Video Parms{};

	Parms.Time = std::move(Time);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Screen.Tutorial_Screen_C.Play or Pause
// (BlueprintCallable, BlueprintEvent)

void ATutorial_Screen_C::Play_or_Pause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Screen_C", "Play or Pause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tutorial_Screen.Tutorial_Screen_C.Play Video
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTimespan&                 Time                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ATutorial_Screen_C::Play_Video(const struct FTimespan& Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Screen_C", "Play Video");

	Params::Tutorial_Screen_C_Play_Video Parms{};

	Parms.Time = std::move(Time);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Screen.Tutorial_Screen_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ATutorial_Screen_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Screen_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tutorial_Screen.Tutorial_Screen_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATutorial_Screen_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Screen_C", "ReceiveTick");

	Params::Tutorial_Screen_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Screen.Tutorial_Screen_C.Set Video
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMediaSource*                     Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ATutorial_Screen_C::Set_Video(class UMediaSource* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Screen_C", "Set Video");

	Params::Tutorial_Screen_C_Set_Video Parms{};

	Parms.Source = Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Screen.Tutorial_Screen_C.Waiting Video
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATutorial_Screen_C::Waiting_Video()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Screen_C", "Waiting Video");

	UObject::ProcessEvent(Func, nullptr);
}

}

