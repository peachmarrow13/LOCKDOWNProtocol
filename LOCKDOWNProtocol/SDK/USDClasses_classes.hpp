#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: USDClasses

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "USDClasses_structs.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class USDClasses.UsdAssetCache
// 0x01C0 (0x01E8 - 0x0028)
class UUsdAssetCache final : public UObject
{
public:
	TMap<class FString, class UObject*>           TransientStorage;                                  // 0x0028(0x0050)(Edit, Transient, EditConst, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<class FString, class UObject*>           PersistentStorage;                                 // 0x0078(0x0050)(Edit, EditConst, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                          bAllowPersistentStorage;                           // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<TWeakObjectPtr<class UObject>>           OwnedAssets;                                       // 0x00D0(0x0050)(NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<class FString, TWeakObjectPtr<class UObject>> PrimPathToAssets;                             // 0x0120(0x0050)(NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_170[0x78];                                     // 0x0170(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdAssetCache")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdAssetCache")
	}
	static class UUsdAssetCache* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdAssetCache>();
	}
};
DUMPER7_ASSERTS_UUsdAssetCache;

// Class USDClasses.UsdAssetCache2
// 0x0178 (0x01A0 - 0x0028)
class UUsdAssetCache2 final : public UObject
{
public:
	double                                        UnreferencedAssetStorageSizeMB;                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        PersistentAssetStorageSizeMB;                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class UObject*>           AssetStorage;                                      // 0x0038(0x0050)(Edit, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_88[0x118];                                     // 0x0088(0x0118)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AddAssetReference(const class UObject* Asset, const class UObject* Referencer);
	void CacheAsset(const class FString& Hash, class UObject* Asset, const class UObject* Referencer);
	bool CanRemoveAsset(const class FString& Hash);
	class UObject* GetCachedAsset(const class FString& Hash);
	void RefreshStorage();
	bool RemoveAllAssetReferences(const class UObject* Referencer);
	class UObject* RemoveAsset(const class FString& Hash);
	bool RemoveAssetReference(const class UObject* Asset, const class UObject* Referencer);
	void Reset();
	bool TouchAsset(const class UObject* Asset, const class UObject* Referencer);

	TArray<class FString> GetAllAssetHashes() const;
	TArray<class FString> GetAllCachedAssetPaths() const;
	TArray<class UObject*> GetAllLoadedAssets() const;
	class FString GetHashForAsset(const class UObject* Asset) const;
	int32 GetNumAssets() const;
	bool IsAssetOwnedByCache(const class FString& AssetPath) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdAssetCache2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdAssetCache2")
	}
	static class UUsdAssetCache2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdAssetCache2>();
	}
};
DUMPER7_ASSERTS_UUsdAssetCache2;

// Class USDClasses.UsdAssetCache3
// 0x0268 (0x0290 - 0x0028)
class UUsdAssetCache3 final : public UObject
{
public:
	struct FDirectoryPath                         AssetDirectory;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyHandleAssetsWithinAssetDirectory;             // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FSoftObjectPath>   HashToAssetPaths;                                  // 0x0040(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bCleanUpUnreferencedAssets;                        // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FSoftObjectPath, class FString>   AssetPathToHashes;                                 // 0x0098(0x0050)(NativeAccessSpecifierPrivate)
	TMap<class FString, class UObject*>           TransientObjectStorage;                            // 0x00E8(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_138[0x158];                                    // 0x0138(0x0158)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AddAssetReferencer(const class UObject* Asset, const class UObject* Referencer);
	void CacheAsset(const class FString& Hash, const struct FSoftObjectPath& AssetPath, const class UObject* Referencer);
	void DeleteUnreferencedAssets(const bool bShowConfirmation);
	void DeleteUnreferencedAssetsWithConfirmation();
	class UObject* GetOrCreateCachedAsset(const class FString& Hash, class UClass* Class_0, const class FString& DesiredName, int32 DesiredFlags, bool* bOutCreatedAsset, const class UObject* Referencer);
	bool RemoveAllAssetReferencers();
	bool RemoveAllReferencerAssets(const class UObject* Referencer);
	bool RemoveAllReferencersForAsset(const class UObject* Asset);
	bool RemoveAssetReferencer(const class UObject* Asset, const class UObject* Referencer);
	void RescanAssetDirectory();
	void SetAssetDeletable(const class UObject* Asset, bool bIsDeletable);
	struct FSoftObjectPath StopTrackingAsset(const class FString& Hash);

	TMap<class FString, struct FSoftObjectPath> GetAllTrackedAssets() const;
	class UObject* GetCachedAsset(const class FString& Hash) const;
	struct FSoftObjectPath GetCachedAssetPath(const class FString& Hash) const;
	class FString GetHashForAsset(const struct FSoftObjectPath& AssetPath) const;
	int32 GetNumAssets() const;
	bool IsAssetDeletable(const class UObject* Asset) const;
	bool IsAssetTrackedByCache(const struct FSoftObjectPath& AssetPath) const;
	TMap<class FString, class UObject*> LoadAndGetAllTrackedAssets() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdAssetCache3")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdAssetCache3")
	}
	static class UUsdAssetCache3* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdAssetCache3>();
	}
};
DUMPER7_ASSERTS_UUsdAssetCache3;

// Class USDClasses.UsdAssetImportData
// 0x0018 (0x0040 - 0x0028)
class UUsdAssetImportData : public UAssetImportData
{
public:
	class FString                                 PrimPath;                                          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ImportOptions;                                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdAssetImportData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdAssetImportData")
	}
	static class UUsdAssetImportData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdAssetImportData>();
	}
};
DUMPER7_ASSERTS_UUsdAssetImportData;

// Class USDClasses.UsdAnimSequenceAssetImportData
// 0x0008 (0x0048 - 0x0040)
class UUsdAnimSequenceAssetImportData final : public UUsdAssetImportData
{
public:
	float                                         LayerStartOffsetSeconds;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdAnimSequenceAssetImportData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdAnimSequenceAssetImportData")
	}
	static class UUsdAnimSequenceAssetImportData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdAnimSequenceAssetImportData>();
	}
};
DUMPER7_ASSERTS_UUsdAnimSequenceAssetImportData;

// Class USDClasses.UsdMeshAssetImportData
// 0x0050 (0x0090 - 0x0040)
class UUsdMeshAssetImportData final : public UUsdAssetImportData
{
public:
	TMap<int32, struct FUsdPrimPathList>          MaterialSlotToPrimPaths;                           // 0x0040(0x0050)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdMeshAssetImportData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdMeshAssetImportData")
	}
	static class UUsdMeshAssetImportData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdMeshAssetImportData>();
	}
};
DUMPER7_ASSERTS_UUsdMeshAssetImportData;

// Class USDClasses.UsdAssetUserData
// 0x0070 (0x0098 - 0x0028)
class UUsdAssetUserData : public UAssetUserData
{
public:
	TArray<class FString>                         PrimPaths;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, struct FUsdCombinedPrimMetadata> StageIdentifierToMetadata;                  // 0x0038(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 OriginalHash;                                      // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdAssetUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdAssetUserData")
	}
	static class UUsdAssetUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdAssetUserData>();
	}
};
DUMPER7_ASSERTS_UUsdAssetUserData;

// Class USDClasses.UsdAnimSequenceAssetUserData
// 0x0008 (0x00A0 - 0x0098)
class UUsdAnimSequenceAssetUserData final : public UUsdAssetUserData
{
public:
	float                                         LayerStartOffsetSeconds;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdAnimSequenceAssetUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdAnimSequenceAssetUserData")
	}
	static class UUsdAnimSequenceAssetUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdAnimSequenceAssetUserData>();
	}
};
DUMPER7_ASSERTS_UUsdAnimSequenceAssetUserData;

// Class USDClasses.UsdMaterialAssetUserData
// 0x00A0 (0x0138 - 0x0098)
class UUsdMaterialAssetUserData final : public UUsdAssetUserData
{
public:
	TMap<class FString, class FString>            ParameterToPrimvar;                                // 0x0098(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<class FString, int32>                    PrimvarToUVIndex;                                  // 0x00E8(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdMaterialAssetUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdMaterialAssetUserData")
	}
	static class UUsdMaterialAssetUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdMaterialAssetUserData>();
	}
};
DUMPER7_ASSERTS_UUsdMaterialAssetUserData;

// Class USDClasses.UsdMeshAssetUserData
// 0x00A0 (0x0138 - 0x0098)
class UUsdMeshAssetUserData : public UUsdAssetUserData
{
public:
	TMap<int32, struct FUsdPrimPathList>          MaterialSlotToPrimPaths;                           // 0x0098(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<class FString, int32>                    PrimvarToUVIndex;                                  // 0x00E8(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdMeshAssetUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdMeshAssetUserData")
	}
	static class UUsdMeshAssetUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdMeshAssetUserData>();
	}
};
DUMPER7_ASSERTS_UUsdMeshAssetUserData;

// Class USDClasses.UsdGeometryCacheAssetUserData
// 0x0008 (0x0140 - 0x0138)
class UUsdGeometryCacheAssetUserData final : public UUsdMeshAssetUserData
{
public:
	float                                         LayerStartOffsetSeconds;                           // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdGeometryCacheAssetUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdGeometryCacheAssetUserData")
	}
	static class UUsdGeometryCacheAssetUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdGeometryCacheAssetUserData>();
	}
};
DUMPER7_ASSERTS_UUsdGeometryCacheAssetUserData;

// Class USDClasses.UsdLevelSequenceAssetUserData
// 0x0060 (0x0088 - 0x0028)
class UUsdLevelSequenceAssetUserData final : public UAssetUserData
{
public:
	struct FGuid                                  LastCheckedSignature;                              // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<struct FGuid>                            HandledBindingGuids;                               // 0x0038(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdLevelSequenceAssetUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdLevelSequenceAssetUserData")
	}
	static class UUsdLevelSequenceAssetUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdLevelSequenceAssetUserData>();
	}
};
DUMPER7_ASSERTS_UUsdLevelSequenceAssetUserData;

// Class USDClasses.UsdSparseVolumeTextureAssetUserData
// 0x0040 (0x00D8 - 0x0098)
class UUsdSparseVolumeTextureAssetUserData final : public UUsdAssetUserData
{
public:
	TArray<class FString>                         SourceOpenVDBAssetPrimPaths;                       // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<double>                                TimeSamplePathTimeCodes;                           // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 TimeSamplePathIndices;                             // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         TimeSamplePaths;                                   // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdSparseVolumeTextureAssetUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdSparseVolumeTextureAssetUserData")
	}
	static class UUsdSparseVolumeTextureAssetUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdSparseVolumeTextureAssetUserData>();
	}
};
DUMPER7_ASSERTS_UUsdSparseVolumeTextureAssetUserData;

// Class USDClasses.UsdDrawModeComponent
// 0x0090 (0x0580 - 0x04F0)
class UUsdDrawModeComponent final : public UPrimitiveComponent
{
public:
	struct FVector                                BoundsMin;                                         // 0x04E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BoundsMax;                                         // 0x0500(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUsdDrawMode                                  DrawMode;                                          // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           BoundsColor;                                       // 0x051C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUsdModelCardGeometry                         CardGeometry;                                      // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             CardTextureXPos;                                   // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             CardTextureYPos;                                   // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             CardTextureZPos;                                   // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             CardTextureXNeg;                                   // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             CardTextureYNeg;                                   // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             CardTextureZNeg;                                   // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstance*>              MaterialInstances;                                 // 0x0560(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	int32                                         AuthoredFaces;                                     // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_574[0xC];                                      // 0x0574(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetBoundsColor(const struct FLinearColor& NewColor);
	void SetBoundsMax(const struct FVector& NewMax);
	void SetBoundsMin(const struct FVector& NewMin);
	void SetCardGeometry(EUsdModelCardGeometry NewGeometry);
	void SetCardTextureXNeg(class UTexture2D* NewTexture);
	void SetCardTextureXPos(class UTexture2D* NewTexture);
	void SetCardTextureYNeg(class UTexture2D* NewTexture);
	void SetCardTextureYPos(class UTexture2D* NewTexture);
	void SetCardTextureZNeg(class UTexture2D* NewTexture);
	void SetCardTextureZPos(class UTexture2D* NewTexture);
	void SetDrawMode(EUsdDrawMode NewDrawMode);
	void SetTextureForFace(EUsdModelCardFace Face, class UTexture2D* Texture);

	class UTexture2D* GetTextureForFace(EUsdModelCardFace Face) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdDrawModeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdDrawModeComponent")
	}
	static class UUsdDrawModeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdDrawModeComponent>();
	}
};
DUMPER7_ASSERTS_UUsdDrawModeComponent;

// Class USDClasses.UsdProjectSettings
// 0x0248 (0x0280 - 0x0038)
class UUsdProjectSettings final : public UDeveloperSettings
{
public:
	TArray<struct FDirectoryPath>                 AdditionalPluginDirectories;                       // 0x0038(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FDirectoryPath>                 DefaultResolverSearchPath;                         // 0x0048(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FName>                           AdditionalMaterialPurposes;                        // 0x0058(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                          bLogUsdSdkErrors;                                  // 0x0068(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        DefaultAssetCache;                                 // 0x0070(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowCreateDefaultAssetCacheDialog;                // 0x0090(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowConfirmationWhenClearingLayers;               // 0x0091(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowConfirmationWhenMutingDirtyLayers;            // 0x0092(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowConfirmationWhenReloadingDirtyLayers;         // 0x0093(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowOverriddenOpinionsWarning;                    // 0x0094(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUsdEditInInstanceBehavior                    EditInInstanceableBehavior;                        // 0x0095(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowWarningOnIncompleteDuplication;               // 0x0096(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowTransformOnCameraComponentWarning;            // 0x0097(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowTransformTrackOnCameraComponentWarning;       // 0x0098(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowInheritedVisibilityWarning;                   // 0x0099(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUsdSaveDialogBehavior                        ShowSaveLayersDialogWhenSaving;                    // 0x009A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUsdSaveDialogBehavior                        ShowSaveLayersDialogWhenClosing;                   // 0x009B(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        DefaultSoundAttenuation;                           // 0x00A0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferenceDefaultSVTMaterial;                       // 0x00C0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferenceModelCardTextureMaterial;                 // 0x00E0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferencePreviewSurfaceMaterial;                   // 0x0100(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferencePreviewSurfaceTranslucentMaterial;        // 0x0120(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferencePreviewSurfaceTwoSidedMaterial;           // 0x0140(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferencePreviewSurfaceTranslucentTwoSidedMaterial; // 0x0160(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferencePreviewSurfaceVTMaterial;                 // 0x0180(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferencePreviewSurfaceTranslucentVTMaterial;      // 0x01A0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferencePreviewSurfaceTwoSidedVTMaterial;         // 0x01C0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferencePreviewSurfaceTranslucentTwoSidedVTMaterial; // 0x01E0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferenceDisplayColorMaterial;                     // 0x0200(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferenceDisplayColorAndOpacityMaterial;           // 0x0220(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferenceDisplayColorTwoSidedMaterial;             // 0x0240(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReferenceDisplayColorAndOpacityTwoSidedMaterial;   // 0x0260(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdProjectSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdProjectSettings")
	}
	static class UUsdProjectSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdProjectSettings>();
	}
};
DUMPER7_ASSERTS_UUsdProjectSettings;

// Class USDClasses.UsdReferenceOptions
// 0x0038 (0x0060 - 0x0028)
class UUsdReferenceOptions final : public UObject
{
public:
	bool                                          bInternalReference;                                // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFilePath                              TargetFile;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDefaultPrim;                                   // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TargetPrimPath;                                    // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeCodeOffset;                                    // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeCodeScale;                                     // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsdReferenceOptions")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsdReferenceOptions")
	}
	static class UUsdReferenceOptions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsdReferenceOptions>();
	}
};
DUMPER7_ASSERTS_UUsdReferenceOptions;

}

