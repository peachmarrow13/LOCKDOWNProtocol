#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_KeyMap

#include "Basic.hpp"

#include "W_KeyMap_classes.hpp"
#include "W_KeyMap_parameters.hpp"


namespace SDK
{

// Function W_KeyMap.W_KeyMap_C.BndEvt__W_KeyMap_Button_Default_K2Node_ComponentBoundEvent_7_On Pressed__DelegateSignature
// (BlueprintEvent)

void UW_KeyMap_C::BndEvt__W_KeyMap_Button_Default_K2Node_ComponentBoundEvent_7_On_Pressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "BndEvt__W_KeyMap_Button_Default_K2Node_ComponentBoundEvent_7_On Pressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeyMap.W_KeyMap_C.BndEvt__W_KeyMap_Button_Unbind_K2Node_ComponentBoundEvent_4_On Pressed__DelegateSignature
// (BlueprintEvent)

void UW_KeyMap_C::BndEvt__W_KeyMap_Button_Unbind_K2Node_ComponentBoundEvent_4_On_Pressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "BndEvt__W_KeyMap_Button_Unbind_K2Node_ComponentBoundEvent_4_On Pressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeyMap.W_KeyMap_C.BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_2_On Enter__DelegateSignature
// (BlueprintEvent)

void UW_KeyMap_C::BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_2_On_Enter__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_2_On Enter__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeyMap.W_KeyMap_C.BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_3_On Leave__DelegateSignature
// (BlueprintEvent)

void UW_KeyMap_C::BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_3_On_Leave__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_3_On Leave__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeyMap.W_KeyMap_C.BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_6_On Pressed__DelegateSignature
// (BlueprintEvent)

void UW_KeyMap_C::BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_6_On_Pressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_6_On Pressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeyMap.W_KeyMap_C.BndEvt__W_Selector_All_Trigger_K2Node_ComponentBoundEvent_0_On Enter__DelegateSignature
// (BlueprintEvent)

void UW_KeyMap_C::BndEvt__W_Selector_All_Trigger_K2Node_ComponentBoundEvent_0_On_Enter__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "BndEvt__W_Selector_All_Trigger_K2Node_ComponentBoundEvent_0_On Enter__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeyMap.W_KeyMap_C.BndEvt__W_Selector_All_Trigger_K2Node_ComponentBoundEvent_1_On Leave__DelegateSignature
// (BlueprintEvent)

void UW_KeyMap_C::BndEvt__W_Selector_All_Trigger_K2Node_ComponentBoundEvent_1_On_Leave__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "BndEvt__W_Selector_All_Trigger_K2Node_ComponentBoundEvent_1_On Leave__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeyMap.W_KeyMap_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_KeyMap_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeyMap.W_KeyMap_C.Convert Names
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FText&                      Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText*                            Result                                                 (Parm, OutParm)

void UW_KeyMap_C::Convert_Names(const class FText& Value, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "Convert Names");

	Params::W_KeyMap_C_Convert_Names Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function W_KeyMap.W_KeyMap_C.ExecuteUbergraph_W_KeyMap
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_KeyMap_C::ExecuteUbergraph_W_KeyMap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "ExecuteUbergraph_W_KeyMap");

	Params::W_KeyMap_C_ExecuteUbergraph_W_KeyMap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeyMap.W_KeyMap_C.InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_KeyMap_C::InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0");

	Params::W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeyMap.W_KeyMap_C.Load Key
// (BlueprintCallable, BlueprintEvent)

void UW_KeyMap_C::Load_Key()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "Load Key");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeyMap.W_KeyMap_C.On Press Key
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UW_KeyMap_C::On_Press_Key(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "On Press Key");

	Params::W_KeyMap_C_On_Press_Key Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeyMap.W_KeyMap_C.Override Other Action
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_KeyMap_C::Override_Other_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "Override Other Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeyMap.W_KeyMap_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_KeyMap_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "PreConstruct");

	Params::W_KeyMap_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeyMap.W_KeyMap_C.Reset Key
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Override                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_KeyMap_C::Reset_Key(bool Override)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "Reset Key");

	Params::W_KeyMap_C_Reset_Key Parms{};

	Parms.Override = Override;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeyMap.W_KeyMap_C.Save Input
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UW_KeyMap_C::Save_Input(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "Save Input");

	Params::W_KeyMap_C_Save_Input Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeyMap.W_KeyMap_C.Set HUD Tablet Help
// (BlueprintCallable, BlueprintEvent)

void UW_KeyMap_C::Set_HUD_Tablet_Help()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "Set HUD Tablet Help");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeyMap.W_KeyMap_C.Set KeyText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Listen                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_KeyMap_C::Set_KeyText(bool Listen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "Set KeyText");

	Params::W_KeyMap_C_Set_KeyText Parms{};

	Parms.Listen = Listen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeyMap.W_KeyMap_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_KeyMap_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "Tick");

	Params::W_KeyMap_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeyMap.W_KeyMap_C.Unbind Key
// (BlueprintCallable, BlueprintEvent)

void UW_KeyMap_C::Unbind_Key()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeyMap_C", "Unbind Key");

	UObject::ProcessEvent(Func, nullptr);
}

}

